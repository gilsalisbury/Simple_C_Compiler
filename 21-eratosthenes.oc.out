ROOT "" 0:0.000                        
|  PROTOTYPE "" 5:23.000        
|  |  VOID "void" 5:23.000  void 
|  |  |  DECLID "__assert_fail" 5:23.005 void prototype 
|  |  PARAMLIST "(" 5:23.019         
|  |  |  STRING "string" 5:23.020 string 
|  |  |  |  DECLID "expr" 5:23.027 string variable param lval 
|  |  |  STRING "string" 5:23.033 string 
|  |  |  |  DECLID "file" 5:23.040 string variable param lval 
|  |  |  INT "int" 5:23.046   int 
|  |  |  |  DECLID "line" 5:23.050 int variable param lval 
|  PROTOTYPE "" 5:24.000        
|  |  VOID "void" 5:24.000  void 
|  |  |  DECLID "putb" 5:24.005 void prototype 
|  |  PARAMLIST "(" 5:24.010       
|  |  |  BOOL "bool" 5:24.011  bool 
|  |  |  |  DECLID "b" 5:24.016 bool variable param lval 
|  PROTOTYPE "" 5:25.000        
|  |  VOID "void" 5:25.000  void 
|  |  |  DECLID "putc" 5:25.005 void prototype 
|  |  PARAMLIST "(" 5:25.010       
|  |  |  CHAR "char" 5:25.011  char 
|  |  |  |  DECLID "c" 5:25.016 char variable param lval 
|  PROTOTYPE "" 5:26.000        
|  |  VOID "void" 5:26.000  void 
|  |  |  DECLID "puti" 5:26.005 void prototype 
|  |  PARAMLIST "(" 5:26.010       
|  |  |  INT "int" 5:26.011   int 
|  |  |  |  DECLID "i" 5:26.015 int variable param lval 
|  PROTOTYPE "" 5:27.000        
|  |  VOID "void" 5:27.000  void 
|  |  |  DECLID "puts" 5:27.005 void prototype 
|  |  PARAMLIST "(" 5:27.010       
|  |  |  STRING "string" 5:27.011 string 
|  |  |  |  DECLID "s" 5:27.018 string variable param lval 
|  PROTOTYPE "" 5:28.000        
|  |  VOID "void" 5:28.000  void 
|  |  |  DECLID "endl" 5:28.005 void prototype 
|  |  PARAMLIST "(" 5:28.010       
|  PROTOTYPE "" 5:29.000        
|  |  INT "int" 5:29.000   int 
|  |  |  DECLID "getc" 5:29.004 int prototype 
|  |  PARAMLIST "(" 5:29.009       
|  PROTOTYPE "" 5:30.000        
|  |  STRING "string" 5:30.000 string 
|  |  |  DECLID "getw" 5:30.007 string prototype 
|  |  PARAMLIST "(" 5:30.012       
|  PROTOTYPE "" 5:31.000        
|  |  STRING "string" 5:31.000 string 
|  |  |  DECLID "getln" 5:31.007 string prototype 
|  |  PARAMLIST "(" 5:31.013       
|  PROTOTYPE "" 5:32.006        
|  |  ARRAY "[]" 5:32.006 string array lval vaddr  
|  |  |  STRING "string" 5:32.000 string 
|  |  |  DECLID "getargv" 5:32.009 string array vaddr prototype 
|  |  PARAMLIST "(" 5:32.017       
|  PROTOTYPE "" 5:33.000        
|  |  VOID "void" 5:33.000  void 
|  |  |  DECLID "exit" 5:33.005 void prototype 
|  |  PARAMLIST "(" 5:33.010       
|  |  |  INT "int" 5:33.011   int 
|  |  |  |  DECLID "status" 5:33.015 int variable param lval 
|  VARDECL "=" 6:7.013        
|  |  ARRAY "[]" 6:7.004 bool array lval vaddr  
|  |  |  BOOL "bool" 6:7.000  bool 
|  |  |  DECLID "sieve" 6:7.007 bool array variable lval 
|  |  NEWARRAY "new" 6:7.015 bool array vreg  
|  |  |  BOOL "bool" 6:7.019  bool 
|  |  |  INTCON "100" 6:7.024 int const 
|  VARDECL "=" 6:8.010        
|  |  INT "int" 6:8.000 int lval 
|  |  |  DECLID "index" 6:8.004 int variable lval 
|  |  INTCON "2" 6:8.012 int const vreg 
|  WHILE "while" 6:10.000        
|  |  LT "<" 6:10.013 bool vreg  
|  |  |  IDENT "index" 6:10.007 int variable lval 
|  |  |  INTCON "100" 6:10.015 int const 
|  |  BLOCK "{" 6:10.020        
|  |  |  '=' "=" 6:11.016        
|  |  |  |  INDEX "[" 6:11.008 bool vreg vaddr  
|  |  |  |  |  IDENT "sieve" 6:11.003 bool array variable lval 
|  |  |  |  |  IDENT "index" 6:11.009 int variable lval 
|  |  |  |  TRUE "true" 6:11.018 bool const vreg 
|  |  |  '=' "=" 6:12.009        
|  |  |  |  IDENT "index" 6:12.003 int variable lval 
|  |  |  |  '+' "+" 6:12.017 int vreg  
|  |  |  |  |  IDENT "index" 6:12.011 int variable lval 
|  |  |  |  |  INTCON "1" 6:12.019 int const 
|  VARDECL "=" 6:15.010        
|  |  INT "int" 6:15.000 int lval 
|  |  |  DECLID "prime" 6:15.004 int variable lval 
|  |  INTCON "2" 6:15.012 int const vreg 
|  WHILE "while" 6:16.000        
|  |  LT "<" 6:16.013 bool vreg  
|  |  |  IDENT "prime" 6:16.007 int variable lval 
|  |  |  INTCON "100" 6:16.015 int const 
|  |  BLOCK "{" 6:16.020        
|  |  |  IFELSE "if" 6:17.003        
|  |  |  |  INDEX "[" 6:17.012 bool vreg vaddr  
|  |  |  |  |  IDENT "sieve" 6:17.007 bool array variable lval 
|  |  |  |  |  IDENT "prime" 6:17.013 int variable lval 
|  |  |  |  BLOCK "{" 6:17.021        
|  |  |  |  |  '=' "=" 6:18.012        
|  |  |  |  |  |  IDENT "index" 6:18.006 int variable lval 
|  |  |  |  |  |  '*' "*" 6:18.020 int vreg  
|  |  |  |  |  |  |  IDENT "prime" 6:18.014 int variable lval 
|  |  |  |  |  |  |  INTCON "2" 6:18.022 int const 
|  |  |  |  |  WHILE "while" 6:19.006        
|  |  |  |  |  |  LT "<" 6:19.019 bool vreg  
|  |  |  |  |  |  |  IDENT "index" 6:19.013 int variable lval 
|  |  |  |  |  |  |  INTCON "100" 6:19.021 int const 
|  |  |  |  |  |  BLOCK "{" 6:19.026        
|  |  |  |  |  |  |  '=' "=" 6:20.022        
|  |  |  |  |  |  |  |  INDEX "[" 6:20.014 bool vreg vaddr  
|  |  |  |  |  |  |  |  |  IDENT "sieve" 6:20.009 bool array variable lval 
|  |  |  |  |  |  |  |  |  IDENT "index" 6:20.015 int variable lval 
|  |  |  |  |  |  |  |  FALSE "false" 6:20.024 bool const vreg 
|  |  |  |  |  |  |  '=' "=" 6:21.015        
|  |  |  |  |  |  |  |  IDENT "index" 6:21.009 int variable lval 
|  |  |  |  |  |  |  |  '+' "+" 6:21.023 int vreg  
|  |  |  |  |  |  |  |  |  IDENT "index" 6:21.017 int variable lval 
|  |  |  |  |  |  |  |  |  IDENT "prime" 6:21.025 int variable lval 
|  |  |  '=' "=" 6:24.009        
|  |  |  |  IDENT "prime" 6:24.003 int variable lval 
|  |  |  |  '+' "+" 6:24.017 int vreg  
|  |  |  |  |  IDENT "prime" 6:24.011 int variable lval 
|  |  |  |  |  INTCON "1" 6:24.019 int const 
|  '=' "=" 6:27.006        
|  |  IDENT "index" 6:27.000 int variable lval 
|  |  INTCON "2" 6:27.008 int const vreg 
|  WHILE "while" 6:28.000        
|  |  LT "<" 6:28.013 bool vreg  
|  |  |  IDENT "index" 6:28.007 int variable lval 
|  |  |  INTCON "100" 6:28.015 int const 
|  |  BLOCK "{" 6:28.020       
|  |  |  IFELSE "if" 6:29.003        
|  |  |  |  INDEX "[" 6:29.012 bool vreg vaddr  
|  |  |  |  |  IDENT "sieve" 6:29.007 bool array variable lval 
|  |  |  |  |  IDENT "index" 6:29.013 int variable lval 
|  |  |  |  BLOCK "{" 6:29.021        
|  |  |  |  |  CALL "(" 6:30.011 void prototype  
|  |  |  |  |  |  IDENT "puti" 6:30.006 void prototype 
|  |  |  |  |  |  IDENT "index" 6:30.012 int variable lval 
|  |  |  |  |  CALL "(" 6:31.011 void prototype 
|  |  |  |  |  |  IDENT "endl" 6:31.006 void prototype 


char* __sieve;
int __index;
int __prime;
type_reg is = char* 
this case: 2
void __ocmain (void) {
        char*  c1 = xcalloc (100, sizeof(char));
        char* __sieve = c1;
        int __index = 2;
while_6_10_0:;
        char  c5 = __index < 100;
        if(!c5) goto break_6_10_0;
        char  *a7 = &__sieve[__index];
        char c9 =  1;
        *a7 = c9;
        int  i11 = __index + 1;
         __index = i11;
        goto while_6_10_0;
break_6_10_0:;
        int __prime = 2;
while_6_16_0:;
        char  c13 = __prime < 100;
        if(!c13) goto break_6_16_0;
        char  *a15 = &__sieve[__prime];
        if(!*a15) goto fi_6_17_3;
        int  i17 = __prime * 2;
         __index = i17;
while_6_19_6:;
        char  c19 = __index < 100;
        if(!c19) goto break_6_19_6;
        char  *a21 = &__sieve[__index];
        char c23 =  0;
        *a21 = c23;
        int  i25 = __index + __prime;
         __index = i25;
        goto while_6_19_6;
break_6_19_6:;
fi_6_17_3:;
        int  i27 = __prime + 1;
         __prime = i27;
        goto while_6_16_0;
break_6_16_0:;
         __index = 2;
while_6_28_0:;
        char  c29 = __index < 100;
        if(!c29) goto break_6_28_0;
        char  *a31 = &__sieve[__index];
        if(!*a31) goto fi_6_29_3;
        __puti(__index);
        __endl();
fi_6_29_3:;
        goto while_6_28_0;
break_6_28_0:;
return;
};
