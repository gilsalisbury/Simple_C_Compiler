ROOT "" 0:0.000                    
|  PROTOTYPE "" 5:23.000        
|  |  VOID "void" 5:23.000  void 
|  |  |  DECLID "__assert_fail" 5:23.005 void prototype 
|  |  PARAMLIST "(" 5:23.019         
|  |  |  STRING "string" 5:23.020 string 
|  |  |  |  DECLID "expr" 5:23.027 string variable param lval 
|  |  |  STRING "string" 5:23.033 string 
|  |  |  |  DECLID "file" 5:23.040 string variable param lval 
|  |  |  INT "int" 5:23.046   int 
|  |  |  |  DECLID "line" 5:23.050 int variable param lval 
|  PROTOTYPE "" 5:24.000        
|  |  VOID "void" 5:24.000  void 
|  |  |  DECLID "putb" 5:24.005 void prototype 
|  |  PARAMLIST "(" 5:24.010       
|  |  |  BOOL "bool" 5:24.011  bool 
|  |  |  |  DECLID "b" 5:24.016 bool variable param lval 
|  PROTOTYPE "" 5:25.000        
|  |  VOID "void" 5:25.000  void 
|  |  |  DECLID "putc" 5:25.005 void prototype 
|  |  PARAMLIST "(" 5:25.010       
|  |  |  CHAR "char" 5:25.011  char 
|  |  |  |  DECLID "c" 5:25.016 char variable param lval 
|  PROTOTYPE "" 5:26.000        
|  |  VOID "void" 5:26.000  void 
|  |  |  DECLID "puti" 5:26.005 void prototype 
|  |  PARAMLIST "(" 5:26.010       
|  |  |  INT "int" 5:26.011   int 
|  |  |  |  DECLID "i" 5:26.015 int variable param lval 
|  PROTOTYPE "" 5:27.000        
|  |  VOID "void" 5:27.000  void 
|  |  |  DECLID "puts" 5:27.005 void prototype 
|  |  PARAMLIST "(" 5:27.010       
|  |  |  STRING "string" 5:27.011 string 
|  |  |  |  DECLID "s" 5:27.018 string variable param lval 
|  PROTOTYPE "" 5:28.000        
|  |  VOID "void" 5:28.000  void 
|  |  |  DECLID "endl" 5:28.005 void prototype 
|  |  PARAMLIST "(" 5:28.010       
|  PROTOTYPE "" 5:29.000        
|  |  INT "int" 5:29.000   int 
|  |  |  DECLID "getc" 5:29.004 int prototype 
|  |  PARAMLIST "(" 5:29.009       
|  PROTOTYPE "" 5:30.000        
|  |  STRING "string" 5:30.000 string 
|  |  |  DECLID "getw" 5:30.007 string prototype 
|  |  PARAMLIST "(" 5:30.012       
|  PROTOTYPE "" 5:31.000        
|  |  STRING "string" 5:31.000 string 
|  |  |  DECLID "getln" 5:31.007 string prototype 
|  |  PARAMLIST "(" 5:31.013       
|  PROTOTYPE "" 5:32.006        
|  |  ARRAY "[]" 5:32.006 string array lval vaddr  
|  |  |  STRING "string" 5:32.000 string 
|  |  |  DECLID "getargv" 5:32.009 string array vaddr prototype 
|  |  PARAMLIST "(" 5:32.017       
|  PROTOTYPE "" 5:33.000        
|  |  VOID "void" 5:33.000  void 
|  |  |  DECLID "exit" 5:33.005 void prototype 
|  |  PARAMLIST "(" 5:33.010       
|  |  |  INT "int" 5:33.011   int 
|  |  |  |  DECLID "status" 5:33.015 int variable param lval 
|  FUNCTION "" 6:8.000         
|  |  INT "int" 6:8.000   int 
|  |  |  DECLID "fibonacci" 6:8.004 int function 
|  |  PARAMLIST "(" 6:8.014       
|  |  |  INT "int" 6:8.015   int 
|  |  |  |  DECLID "n" 6:8.019 int variable param lval 
|  |  BLOCK "{" 6:8.022        
|  |  |  IFELSE "if" 6:9.003        
|  |  |  |  LT "<" 6:9.009 bool vreg  
|  |  |  |  |  IDENT "n" 6:9.007 int variable param lval 
|  |  |  |  |  INTCON "2" 6:9.011 int const 
|  |  |  |  RETURN "return" 6:9.014 int variable param lval 
|  |  |  |  |  IDENT "n" 6:9.021 int variable param lval 
|  |  |  RETURN "return" 6:10.003 int vreg 
|  |  |  |  '+' "+" 6:10.028 int vreg  
|  |  |  |  |  CALL "(" 6:10.020 int lval  
|  |  |  |  |  |  IDENT "fibonacci" 6:10.010 int lval 
|  |  |  |  |  |  '-' "-" 6:10.023 int vreg  
|  |  |  |  |  |  |  IDENT "n" 6:10.021 int variable param lval 
|  |  |  |  |  |  |  INTCON "1" 6:10.025 int const 
|  |  |  |  |  CALL "(" 6:10.040 int lval  
|  |  |  |  |  |  IDENT "fibonacci" 6:10.030 int lval 
|  |  |  |  |  |  '-' "-" 6:10.043 int vreg  
|  |  |  |  |  |  |  IDENT "n" 6:10.041 int variable param lval 
|  |  |  |  |  |  |  INTCON "2" 6:10.045 int const 
|  VARDECL "=" 6:15.006        
|  |  INT "int" 6:15.000 int lval 
|  |  |  DECLID "n" 6:15.004 int variable lval 
|  |  INTCON "0" 6:15.008 int const vreg 
|  WHILE "while" 6:16.000        
|  |  LT "<" 6:16.009 bool vreg  
|  |  |  IDENT "n" 6:16.007 int variable lval 
|  |  |  INTCON "10" 6:16.011 int const 
|  |  BLOCK "{" 6:16.015           
|  |  |  CALL "(" 6:17.008 void prototype  
|  |  |  |  IDENT "puts" 6:17.003 void prototype 
|  |  |  |  STRINGCON ""fibonacci("" 6:17.009 string const 
|  |  |  CALL "(" 6:18.008 void prototype  
|  |  |  |  IDENT "puti" 6:18.003 void prototype 
|  |  |  |  IDENT "n" 6:18.009 int variable lval 
|  |  |  CALL "(" 6:19.008 void prototype  
|  |  |  |  IDENT "puts" 6:19.003 void prototype 
|  |  |  |  STRINGCON "" = "" 6:19.009 string const 
|  |  |  CALL "(" 6:20.008 void prototype  
|  |  |  |  IDENT "puti" 6:20.003 void prototype 
|  |  |  |  CALL "(" 6:20.019   int  
|  |  |  |  |  IDENT "fibonacci" 6:20.009 int function 
|  |  |  |  |  IDENT "n" 6:20.020 int variable lval 
|  |  |  CALL "(" 6:21.008 void prototype 
|  |  |  |  IDENT "endl" 6:21.003 void prototype 


char* c1 = "fibonacci(";
char* c2 = " = ";
int __n;
int __fibonacci (
        int _12_n)
{
        char  c3 = _12_n < 2;
        if(!c3) goto fi_6_9_3;
return _12_n;
fi_6_9_3:;
        int  i5 = _12_n - 1;
        int  i7 = __fibonacci(i5);
        int  i9 = _12_n - 2;
        int  i11 = __fibonacci(i9);
        int  i13 = i7 + i11;
return i13;
};
void __ocmain (void) {
        int __n = 0;
while_6_16_0:;
        char  c15 = __n < 10;
        if(!c15) goto break_6_16_0;
        __puts(c1);
        __puti(__n);
        __puts(c2);
        int  i20 = __fibonacci(__n);
        __puti(i20);
        __endl();
        goto while_6_16_0;
break_6_16_0:;
return;
};
