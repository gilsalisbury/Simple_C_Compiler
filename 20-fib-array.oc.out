ROOT "" 0:0.000                         
|  PROTOTYPE "" 5:23.000        
|  |  VOID "void" 5:23.000  void 
|  |  |  DECLID "__assert_fail" 5:23.005 void prototype 
|  |  PARAMLIST "(" 5:23.019         
|  |  |  STRING "string" 5:23.020 string 
|  |  |  |  DECLID "expr" 5:23.027 string variable param lval 
|  |  |  STRING "string" 5:23.033 string 
|  |  |  |  DECLID "file" 5:23.040 string variable param lval 
|  |  |  INT "int" 5:23.046   int 
|  |  |  |  DECLID "line" 5:23.050 int variable param lval 
|  PROTOTYPE "" 5:24.000        
|  |  VOID "void" 5:24.000  void 
|  |  |  DECLID "putb" 5:24.005 void prototype 
|  |  PARAMLIST "(" 5:24.010       
|  |  |  BOOL "bool" 5:24.011  bool 
|  |  |  |  DECLID "b" 5:24.016 bool variable param lval 
|  PROTOTYPE "" 5:25.000        
|  |  VOID "void" 5:25.000  void 
|  |  |  DECLID "putc" 5:25.005 void prototype 
|  |  PARAMLIST "(" 5:25.010       
|  |  |  CHAR "char" 5:25.011  char 
|  |  |  |  DECLID "c" 5:25.016 char variable param lval 
|  PROTOTYPE "" 5:26.000        
|  |  VOID "void" 5:26.000  void 
|  |  |  DECLID "puti" 5:26.005 void prototype 
|  |  PARAMLIST "(" 5:26.010       
|  |  |  INT "int" 5:26.011   int 
|  |  |  |  DECLID "i" 5:26.015 int variable param lval 
|  PROTOTYPE "" 5:27.000        
|  |  VOID "void" 5:27.000  void 
|  |  |  DECLID "puts" 5:27.005 void prototype 
|  |  PARAMLIST "(" 5:27.010       
|  |  |  STRING "string" 5:27.011 string 
|  |  |  |  DECLID "s" 5:27.018 string variable param lval 
|  PROTOTYPE "" 5:28.000        
|  |  VOID "void" 5:28.000  void 
|  |  |  DECLID "endl" 5:28.005 void prototype 
|  |  PARAMLIST "(" 5:28.010       
|  PROTOTYPE "" 5:29.000        
|  |  INT "int" 5:29.000   int 
|  |  |  DECLID "getc" 5:29.004 int prototype 
|  |  PARAMLIST "(" 5:29.009       
|  PROTOTYPE "" 5:30.000        
|  |  STRING "string" 5:30.000 string 
|  |  |  DECLID "getw" 5:30.007 string prototype 
|  |  PARAMLIST "(" 5:30.012       
|  PROTOTYPE "" 5:31.000        
|  |  STRING "string" 5:31.000 string 
|  |  |  DECLID "getln" 5:31.007 string prototype 
|  |  PARAMLIST "(" 5:31.013       
|  PROTOTYPE "" 5:32.006        
|  |  ARRAY "[]" 5:32.006 string array lval vaddr  
|  |  |  STRING "string" 5:32.000 string 
|  |  |  DECLID "getargv" 5:32.009 string array vaddr prototype 
|  |  PARAMLIST "(" 5:32.017       
|  PROTOTYPE "" 5:33.000        
|  |  VOID "void" 5:33.000  void 
|  |  |  DECLID "exit" 5:33.005 void prototype 
|  |  PARAMLIST "(" 5:33.010       
|  |  |  INT "int" 5:33.011   int 
|  |  |  |  DECLID "status" 5:33.015 int variable param lval 
|  VARDECL "=" 6:9.016        
|  |  ARRAY "[]" 6:9.003 int array lval vaddr  
|  |  |  INT "int" 6:9.000   int 
|  |  |  DECLID "fibonacci" 6:9.006 int array variable lval 
|  |  NEWARRAY "new" 6:9.018 int array vreg  
|  |  |  INT "int" 6:9.022   int 
|  |  |  INTCON "30" 6:9.026 int const 
|  '=' "=" 6:11.013        
|  |  INDEX "[" 6:11.009 int vreg vaddr  
|  |  |  IDENT "fibonacci" 6:11.000 int array variable lval 
|  |  |  INTCON "0" 6:11.010 int const 
|  |  INTCON "0" 6:11.015 int const vreg 
|  '=' "=" 6:12.013        
|  |  INDEX "[" 6:12.009 int vreg vaddr  
|  |  |  IDENT "fibonacci" 6:12.000 int array variable lval 
|  |  |  INTCON "1" 6:12.010 int const 
|  |  INTCON "1" 6:12.015 int const vreg 
|  VARDECL "=" 6:14.010        
|  |  INT "int" 6:14.000 int lval 
|  |  |  DECLID "index" 6:14.004 int variable lval 
|  |  INTCON "2" 6:14.012 int const vreg 
|  WHILE "while" 6:15.000        
|  |  LT "<" 6:15.013 bool vreg  
|  |  |  IDENT "index" 6:15.007 int variable lval 
|  |  |  INTCON "30" 6:15.015 int const 
|  |  BLOCK "{" 6:15.019        
|  |  |  '=' "=" 6:16.020        
|  |  |  |  INDEX "[" 6:16.012 int vreg vaddr  
|  |  |  |  |  IDENT "fibonacci" 6:16.003 int array variable lval 
|  |  |  |  |  IDENT "index" 6:16.013 int variable lval 
|  |  |  |  '+' "+" 6:16.043 int vreg  
|  |  |  |  |  INDEX "[" 6:16.031 int vreg vaddr  
|  |  |  |  |  |  IDENT "fibonacci" 6:16.022 int array variable lval 
|  |  |  |  |  |  '-' "-" 6:16.038 int vreg  
|  |  |  |  |  |  |  IDENT "index" 6:16.032 int variable lval 
|  |  |  |  |  |  |  INTCON "1" 6:16.040 int const 
|  |  |  |  |  INDEX "[" 6:16.054 int vreg vaddr  
|  |  |  |  |  |  IDENT "fibonacci" 6:16.045 int array variable lval 
|  |  |  |  |  |  '-' "-" 6:16.061 int vreg  
|  |  |  |  |  |  |  IDENT "index" 6:16.055 int variable lval 
|  |  |  |  |  |  |  INTCON "2" 6:16.063 int const 
|  |  |  '=' "=" 6:17.009        
|  |  |  |  IDENT "index" 6:17.003 int variable lval 
|  |  |  |  '+' "+" 6:17.017 int vreg  
|  |  |  |  |  IDENT "index" 6:17.011 int variable lval 
|  |  |  |  |  INTCON "1" 6:17.019 int const 
|  '=' "=" 6:20.006        
|  |  IDENT "index" 6:20.000 int variable lval 
|  |  INTCON "0" 6:20.008 int const vreg 
|  CALL "(" 6:21.005 void prototype  
|  |  IDENT "puts" 6:21.000 void prototype 
|  |  STRINGCON ""Numeri di figlio Bonacci\n"" 6:21.006 string const 
|  WHILE "while" 6:22.000        
|  |  LT "<" 6:22.013 bool vreg  
|  |  |  IDENT "index" 6:22.007 int variable lval 
|  |  |  INTCON "30" 6:22.015 int const 
|  |  BLOCK "{" 6:22.019            
|  |  |  CALL "(" 6:23.008 void prototype  
|  |  |  |  IDENT "puts" 6:23.003 void prototype 
|  |  |  |  STRINGCON ""fibonacci["" 6:23.009 string const 
|  |  |  CALL "(" 6:24.008 void prototype  
|  |  |  |  IDENT "puti" 6:24.003 void prototype 
|  |  |  |  IDENT "index" 6:24.009 int variable lval 
|  |  |  CALL "(" 6:25.008 void prototype  
|  |  |  |  IDENT "puts" 6:25.003 void prototype 
|  |  |  |  STRINGCON "" = "" 6:25.009 string const 
|  |  |  CALL "(" 6:26.008 void prototype  
|  |  |  |  IDENT "puti" 6:26.003 void prototype 
|  |  |  |  INDEX "[" 6:26.018 int vreg vaddr  
|  |  |  |  |  IDENT "fibonacci" 6:26.009 int array variable lval 
|  |  |  |  |  IDENT "index" 6:26.019 int variable lval 
|  |  |  CALL "(" 6:27.008 void prototype 
|  |  |  |  IDENT "endl" 6:27.003 void prototype 
|  |  |  '=' "=" 6:28.009        
|  |  |  |  IDENT "index" 6:28.003 int variable lval 
|  |  |  |  '+' "+" 6:28.017 int vreg  
|  |  |  |  |  IDENT "index" 6:28.011 int variable lval 
|  |  |  |  |  INTCON "1" 6:28.019 int const 


char* c1 = "Numeri di figlio Bonacci\n";
char* c2 = "fibonacci[";
char* c3 = " = ";
int* __fibonacci;
int __index;
type_reg is = int* 
this case: 0
this case: 1
this case: 0
void __ocmain (void) {
        int*  i4 = xcalloc (30, sizeof(int));
        int* __fibonacci = i4;
        int  *a8 = &__fibonacci[0];
        *a8 = 0;
        int  *a10 = &__fibonacci[1];
        *a10 = 1;
        int __index = 2;
while_6_15_0:;
        char  c12 = __index < 30;
        if(!c12) goto break_6_15_0;
        int  *a14 = &__fibonacci[__index];
        int  i16 = __index - 1;
        int  i18 = __index - 1;
        int  *a20 = &__fibonacci[i18];
        int  i22 = __index - 2;
        int  i24 = __index - 2;
        int  *a26 = &__fibonacci[i24];
        int  i28 = *a20 + *a26;
        *a14 = i28;
        int  i30 = __index + 1;
         __index = i30;
        goto while_6_15_0;
break_6_15_0:;
         __index = 0;
        __puts(c1);
while_6_22_0:;
        char  c33 = __index < 30;
        if(!c33) goto break_6_22_0;
        __puts(c2);
        __puti(__index);
        __puts(c3);
        int  *a38 = &__fibonacci[__index];
        __puti(*a38);
        __endl();
        int  i42 = __index + 1;
         __index = i42;
        goto while_6_22_0;
break_6_22_0:;
return;
};
