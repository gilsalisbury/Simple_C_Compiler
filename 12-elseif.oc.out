ROOT "" 0:0.000                    
|  PROTOTYPE "" 5:23.000        
|  |  VOID "void" 5:23.000  void 
|  |  |  DECLID "__assert_fail" 5:23.005 void prototype 
|  |  PARAMLIST "(" 5:23.019         
|  |  |  STRING "string" 5:23.020 string 
|  |  |  |  DECLID "expr" 5:23.027 string variable param lval 
|  |  |  STRING "string" 5:23.033 string 
|  |  |  |  DECLID "file" 5:23.040 string variable param lval 
|  |  |  INT "int" 5:23.046   int 
|  |  |  |  DECLID "line" 5:23.050 int variable param lval 
|  PROTOTYPE "" 5:24.000        
|  |  VOID "void" 5:24.000  void 
|  |  |  DECLID "putb" 5:24.005 void prototype 
|  |  PARAMLIST "(" 5:24.010       
|  |  |  BOOL "bool" 5:24.011  bool 
|  |  |  |  DECLID "b" 5:24.016 bool variable param lval 
|  PROTOTYPE "" 5:25.000        
|  |  VOID "void" 5:25.000  void 
|  |  |  DECLID "putc" 5:25.005 void prototype 
|  |  PARAMLIST "(" 5:25.010       
|  |  |  CHAR "char" 5:25.011  char 
|  |  |  |  DECLID "c" 5:25.016 char variable param lval 
|  PROTOTYPE "" 5:26.000        
|  |  VOID "void" 5:26.000  void 
|  |  |  DECLID "puti" 5:26.005 void prototype 
|  |  PARAMLIST "(" 5:26.010       
|  |  |  INT "int" 5:26.011   int 
|  |  |  |  DECLID "i" 5:26.015 int variable param lval 
|  PROTOTYPE "" 5:27.000        
|  |  VOID "void" 5:27.000  void 
|  |  |  DECLID "puts" 5:27.005 void prototype 
|  |  PARAMLIST "(" 5:27.010       
|  |  |  STRING "string" 5:27.011 string 
|  |  |  |  DECLID "s" 5:27.018 string variable param lval 
|  PROTOTYPE "" 5:28.000        
|  |  VOID "void" 5:28.000  void 
|  |  |  DECLID "endl" 5:28.005 void prototype 
|  |  PARAMLIST "(" 5:28.010       
|  PROTOTYPE "" 5:29.000        
|  |  INT "int" 5:29.000   int 
|  |  |  DECLID "getc" 5:29.004 int prototype 
|  |  PARAMLIST "(" 5:29.009       
|  PROTOTYPE "" 5:30.000        
|  |  STRING "string" 5:30.000 string 
|  |  |  DECLID "getw" 5:30.007 string prototype 
|  |  PARAMLIST "(" 5:30.012       
|  PROTOTYPE "" 5:31.000        
|  |  STRING "string" 5:31.000 string 
|  |  |  DECLID "getln" 5:31.007 string prototype 
|  |  PARAMLIST "(" 5:31.013       
|  PROTOTYPE "" 5:32.006        
|  |  ARRAY "[]" 5:32.006 string array lval vaddr  
|  |  |  STRING "string" 5:32.000 string 
|  |  |  DECLID "getargv" 5:32.009 string array vaddr prototype 
|  |  PARAMLIST "(" 5:32.017       
|  PROTOTYPE "" 5:33.000        
|  |  VOID "void" 5:33.000  void 
|  |  |  DECLID "exit" 5:33.005 void prototype 
|  |  PARAMLIST "(" 5:33.010       
|  |  |  INT "int" 5:33.011   int 
|  |  |  |  DECLID "status" 5:33.015 int variable param lval 
|  VARDECL "=" 6:5.006        
|  |  INT "int" 6:5.000 int lval 
|  |  |  DECLID "a" 6:5.004 int variable lval 
|  |  INTCON "3" 6:5.008 int const vreg 
|  IFELSE "if" 6:7.000         
|  |  EQ "==" 6:7.006 bool vreg  
|  |  |  IDENT "a" 6:7.004 int variable lval 
|  |  |  INTCON "1" 6:7.009 int const 
|  |  CALL "(" 6:7.017 void prototype  
|  |  |  IDENT "puts" 6:7.012 void prototype 
|  |  |  STRINGCON ""one"" 6:7.018 string const 
|  |  IFELSE "if" 6:8.005         
|  |  |  EQ "==" 6:8.011 bool vreg  
|  |  |  |  IDENT "a" 6:8.009 int variable lval 
|  |  |  |  INTCON "2" 6:8.014 int const 
|  |  |  CALL "(" 6:8.022 void prototype  
|  |  |  |  IDENT "puts" 6:8.017 void prototype 
|  |  |  |  STRINGCON ""two"" 6:8.023 string const 
|  |  |  IFELSE "if" 6:9.005         
|  |  |  |  EQ "==" 6:9.011 bool vreg  
|  |  |  |  |  IDENT "a" 6:9.009 int variable lval 
|  |  |  |  |  INTCON "3" 6:9.014 int const 
|  |  |  |  CALL "(" 6:9.022 void prototype  
|  |  |  |  |  IDENT "puts" 6:9.017 void prototype 
|  |  |  |  |  STRINGCON ""three"" 6:9.023 string const 
|  |  |  |  CALL "(" 6:10.010 void prototype  
|  |  |  |  |  IDENT "puts" 6:10.005 void prototype 
|  |  |  |  |  STRINGCON ""many"" 6:10.011 string const 
|  CALL "(" 6:11.005 void prototype 
|  |  IDENT "endl" 6:11.000 void prototype 


char* c1 = "one";
char* c2 = "two";
char* c3 = "three";
char* c4 = "many";
int __a;
void __ocmain (void) {
        int __a = 3;
        char  c5 = __a == 1;
if(!c5) goto else_6_7_0;
        __puts(c1);
        goto fi_6_7_0;
else_6_7_0:;
        char  c8 = __a == 2;
if(!c8) goto else_6_8_5;
        __puts(c2);
        goto fi_6_8_5;
else_6_8_5:;
        char  c11 = __a == 3;
if(!c11) goto else_6_9_5;
        __puts(c3);
        goto fi_6_9_5;
else_6_9_5:;
        __puts(c4);
fi_6_9_5:;
fi_6_8_5:;
fi_6_7_0:;
        __endl();
return;
};
