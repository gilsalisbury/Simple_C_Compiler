#include "oclib.oh"
struct s_stack {
        char*** f_stack_data;
        int* f_stack_size;
        int* f_stack_top;
};
char* c1 = "stack.top < stack.size - 1";
char* c2 = "40-arraystack.oc";
char* c3 = "stack.top != EMPTY";
char* c4 = "40-arraystack.oc";
char** __argv;
struct s_stack* s_stack;
int __argi;
struct s_stack* __new_stack (
        int _12_size)
{
        struct s_stack*  p5 = xcalloc (1, sizeof(struct s_stack));
        struct s_stack* _12_stack = p5;
        char**  *a7 = &_12_stack->f_stack_data;
        char**  c9 = xcalloc (_12_size, sizeof(char*));
        *a7 = c9;
        int  *a13 = &_12_stack->f_stack_size;
        *a13 = _12_size;
        int  *a15 = &_12_stack->f_stack_top;
        int  i17 = -1;
        *a15 = i17;
return _12_stack;
};
char __push (
        struct s_stack* _13_stack,

        char* _13_str)
{
        int  *a19 = &_13_stack->f_stack_top;
        int  *a21 = &_13_stack->f_stack_size;
        int  i23 = *a21 - 1;
        char  c25 = *a19 < i23;
        int  *a27 = &_13_stack->f_stack_top;
        int  *a29 = &_13_stack->f_stack_size;
        int  i31 = *a29 - 1;
        char  c33 = *a27 < i31;
        char  c35 = !c33;
        if(!c35) goto fi_6_22_4;
        ____assert_fail(c1, c2, 22);
fi_6_22_4:;
        int  *a38 = &_13_stack->f_stack_top;
        int  *a40 = &_13_stack->f_stack_top;
        int  i42 = *a40 + 1;
        *a38 = i42;
        char**  *a44 = &_13_stack->f_stack_data;
        int  *a46 = &_13_stack->f_stack_top;
        int  *a48 = &_13_stack->f_stack_top;
        char**  *a50 = &_13_stack->f_stack_data;
        char*  *a52 = &*a50[*a48];
        *a52 = _13_str;
};
char* __pop (
        struct s_stack* _15_stack)
{
        int  *a54 = &_15_stack->f_stack_top;
        int  i56 = -1;
        char  c58 = *a54 != i56;
        int  *a60 = &_15_stack->f_stack_top;
        int  i62 = -1;
        char  c64 = *a60 != i62;
        char  c66 = !c64;
        if(!c66) goto fi_6_28_4;
        ____assert_fail(c3, c4, 28);
fi_6_28_4:;
        char**  *a69 = &_15_stack->f_stack_data;
        int  *a71 = &_15_stack->f_stack_top;
        int  *a73 = &_15_stack->f_stack_top;
        char**  *a75 = &_15_stack->f_stack_data;
        char*  *a77 = &*a75[*a73];
        char* _15_tmp = *a77;
        int  *a79 = &_15_stack->f_stack_top;
        int  *a81 = &_15_stack->f_stack_top;
        int  i83 = *a81 - 1;
        *a79 = i83;
return _15_tmp;
};
char __empty (
        struct s_stack* _17_stack)
{
        int  *a85 = &_17_stack->f_stack_top;
        int  i87 = -1;
        char  c89 = *a85 == i87;
return c89;
};
void __ocmain (void) {
        char**  a91 = __getargv();
        char** __argv = a91;
        struct s_stack*  p93 = __new_stack(100);
        struct s_stack* s_stack = p93;
        int __argi = 0;
while_6_43_0:;
        char*  *a95 = &__argv[__argi];
        char  c97 = *a95 != 0;
        if(!c97) goto break_6_43_0;
        char*  *a99 = &__argv[__argi];
        __push(s_stack, *a99);
        int  i102 = __argi + 1;
         __argi = i102;
        goto while_6_43_0;
break_6_43_0:;
while_6_48_0:;
        char  c104 = __empty(s_stack);
        char  c106 = __empty(s_stack);
        char  c108 = !c106;
        if(!c108) goto break_6_48_0;
        char*  c110 = __pop(s_stack);
        __puts(c110);
        __endl();
        goto while_6_48_0;
break_6_48_0:;
return;
};
