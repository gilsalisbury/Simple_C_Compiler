ROOT "" 0:0.000                           
|  PROTOTYPE "" 5:23.000        
|  |  VOID "void" 5:23.000  void 
|  |  |  DECLID "__assert_fail" 5:23.005 void prototype 
|  |  PARAMLIST "(" 5:23.019         
|  |  |  STRING "string" 5:23.020 string 
|  |  |  |  DECLID "expr" 5:23.027 string variable param lval 
|  |  |  STRING "string" 5:23.033 string 
|  |  |  |  DECLID "file" 5:23.040 string variable param lval 
|  |  |  INT "int" 5:23.046   int 
|  |  |  |  DECLID "line" 5:23.050 int variable param lval 
|  PROTOTYPE "" 5:24.000        
|  |  VOID "void" 5:24.000  void 
|  |  |  DECLID "putb" 5:24.005 void prototype 
|  |  PARAMLIST "(" 5:24.010       
|  |  |  BOOL "bool" 5:24.011  bool 
|  |  |  |  DECLID "b" 5:24.016 bool variable param lval 
|  PROTOTYPE "" 5:25.000        
|  |  VOID "void" 5:25.000  void 
|  |  |  DECLID "putc" 5:25.005 void prototype 
|  |  PARAMLIST "(" 5:25.010       
|  |  |  CHAR "char" 5:25.011  char 
|  |  |  |  DECLID "c" 5:25.016 char variable param lval 
|  PROTOTYPE "" 5:26.000        
|  |  VOID "void" 5:26.000  void 
|  |  |  DECLID "puti" 5:26.005 void prototype 
|  |  PARAMLIST "(" 5:26.010       
|  |  |  INT "int" 5:26.011   int 
|  |  |  |  DECLID "i" 5:26.015 int variable param lval 
|  PROTOTYPE "" 5:27.000        
|  |  VOID "void" 5:27.000  void 
|  |  |  DECLID "puts" 5:27.005 void prototype 
|  |  PARAMLIST "(" 5:27.010       
|  |  |  STRING "string" 5:27.011 string 
|  |  |  |  DECLID "s" 5:27.018 string variable param lval 
|  PROTOTYPE "" 5:28.000        
|  |  VOID "void" 5:28.000  void 
|  |  |  DECLID "endl" 5:28.005 void prototype 
|  |  PARAMLIST "(" 5:28.010       
|  PROTOTYPE "" 5:29.000        
|  |  INT "int" 5:29.000   int 
|  |  |  DECLID "getc" 5:29.004 int prototype 
|  |  PARAMLIST "(" 5:29.009       
|  PROTOTYPE "" 5:30.000        
|  |  STRING "string" 5:30.000 string 
|  |  |  DECLID "getw" 5:30.007 string prototype 
|  |  PARAMLIST "(" 5:30.012       
|  PROTOTYPE "" 5:31.000        
|  |  STRING "string" 5:31.000 string 
|  |  |  DECLID "getln" 5:31.007 string prototype 
|  |  PARAMLIST "(" 5:31.013       
|  PROTOTYPE "" 5:32.006        
|  |  ARRAY "[]" 5:32.006 string array lval vaddr  
|  |  |  STRING "string" 5:32.000 string 
|  |  |  DECLID "getargv" 5:32.009 string array vaddr prototype 
|  |  PARAMLIST "(" 5:32.017       
|  PROTOTYPE "" 5:33.000        
|  |  VOID "void" 5:33.000  void 
|  |  |  DECLID "exit" 5:33.005 void prototype 
|  |  PARAMLIST "(" 5:33.010       
|  |  |  INT "int" 5:33.011   int 
|  |  |  |  DECLID "status" 5:33.015 int variable param lval 
|  STRUCT "struct" 6:6.000          
|  |  TYPEID "stack" 6:6.007 struct "stack" 
|  |  ARRAY "[]" 6:7.009 string array lval vaddr  
|  |  |  STRING "string" 6:7.003 string 
|  |  |  FIELD "data" 6:7.012 string array field {stack} 
|  |  INT "int" 6:8.003   int 
|  |  |  FIELD "size" 6:8.007 int field {stack} 
|  |  INT "int" 6:9.003   int 
|  |  |  FIELD "top" 6:9.007 int field {stack} 
|  FUNCTION "" 6:12.000         
|  |  TYPEID "stack" 6:12.000 struct "stack" 
|  |  |  DECLID "new_stack" 6:12.006 struct "stack" function 
|  |  PARAMLIST "(" 6:12.016       
|  |  |  INT "int" 6:12.017   int 
|  |  |  |  DECLID "size" 6:12.021 int variable param lval 
|  |  BLOCK "{" 6:12.027           
|  |  |  VARDECL "=" 6:13.015        
|  |  |  |  TYPEID "stack" 6:13.003 struct "stack" 
|  |  |  |  |  DECLID "stack" 6:13.009 struct "stack" variable lval 
|  |  |  |  TYPEID "stack" 6:13.021 struct "stack" vreg 
|  |  |  |  |  NEW "new" 6:13.017       
|  |  |  '=' "=" 6:14.014        
|  |  |  |  '.' "." 6:14.008 string array field vaddr  
|  |  |  |  |  IDENT "stack" 6:14.003 struct "stack" variable lval 
|  |  |  |  |  FIELD "data" 6:14.009 field {stack} 
|  |  |  |  NEWARRAY "new" 6:14.016 string array vreg  
|  |  |  |  |  STRING "string" 6:14.020 string 
|  |  |  |  |  IDENT "size" 6:14.027 int variable param lval 
|  |  |  '=' "=" 6:15.014        
|  |  |  |  '.' "." 6:15.008 int field vaddr  
|  |  |  |  |  IDENT "stack" 6:15.003 struct "stack" variable lval 
|  |  |  |  |  FIELD "size" 6:15.009 field {stack} 
|  |  |  |  IDENT "size" 6:15.016 int variable param vreg 
|  |  |  '=' "=" 6:16.013        
|  |  |  |  '.' "." 6:16.008 int field vaddr  
|  |  |  |  |  IDENT "stack" 6:16.003 struct "stack" variable lval 
|  |  |  |  |  FIELD "top" 6:16.009 field {stack} 
|  |  |  |  NEG "-" 6:16.016 int vreg 
|  |  |  |  |  INTCON "1" 6:16.017 int const 
|  |  |  RETURN "return" 6:17.003 struct "stack" variable lval 
|  |  |  |  IDENT "stack" 6:17.010 struct "stack" variable lval 
|  FUNCTION "" 6:20.000         
|  |  VOID "void" 6:20.000  void 
|  |  |  DECLID "push" 6:20.005 void function 
|  |  PARAMLIST "(" 6:20.010        
|  |  |  TYPEID "stack" 6:20.011 struct "stack" 
|  |  |  |  DECLID "stack" 6:20.017 struct "stack" variable param lval 
|  |  |  STRING "string" 6:20.024 string 
|  |  |  |  DECLID "str" 6:20.031 string variable param lval 
|  |  BLOCK "{" 6:20.036        
|  |  |  '=' "=" 6:22.013        
|  |  |  |  '.' "." 6:22.008 int field vaddr  
|  |  |  |  |  IDENT "stack" 6:22.003 struct "stack" variable param lval 
|  |  |  |  |  FIELD "top" 6:22.009 field {stack} 
|  |  |  |  '+' "+" 6:22.025 int vreg  
|  |  |  |  |  '.' "." 6:22.020 int field vaddr  
|  |  |  |  |  |  IDENT "stack" 6:22.015 struct "stack" variable param lval 
|  |  |  |  |  |  FIELD "top" 6:22.021 field {stack} 
|  |  |  |  |  INTCON "1" 6:22.027 int const 
|  |  |  '=' "=" 6:23.025        
|  |  |  |  INDEX "[" 6:23.013 string field vreg vaddr  
|  |  |  |  |  '.' "." 6:23.008 string array field vaddr  
|  |  |  |  |  |  IDENT "stack" 6:23.003 struct "stack" variable param lval 
|  |  |  |  |  |  FIELD "data" 6:23.009 field {stack} 
|  |  |  |  |  '.' "." 6:23.019 int field vaddr  
|  |  |  |  |  |  IDENT "stack" 6:23.014 struct "stack" variable param lval 
|  |  |  |  |  |  FIELD "top" 6:23.020 field {stack} 
|  |  |  |  IDENT "str" 6:23.027 string variable param vreg 
|  FUNCTION "" 6:26.000         
|  |  STRING "string" 6:26.000 string 
|  |  |  DECLID "pop" 6:26.007 string function 
|  |  PARAMLIST "(" 6:26.011       
|  |  |  TYPEID "stack" 6:26.012 struct "stack" 
|  |  |  |  DECLID "stack" 6:26.018 struct "stack" variable param lval 
|  |  BLOCK "{" 6:26.025         
|  |  |  VARDECL "=" 6:28.014        
|  |  |  |  STRING "string" 6:28.003 string lval 
|  |  |  |  |  DECLID "tmp" 6:28.010 string variable lval 
|  |  |  |  INDEX "[" 6:28.026 string field vreg vaddr  
|  |  |  |  |  '.' "." 6:28.021 string array field vaddr  
|  |  |  |  |  |  IDENT "stack" 6:28.016 struct "stack" variable param lval 
|  |  |  |  |  |  FIELD "data" 6:28.022 field {stack} 
|  |  |  |  |  '.' "." 6:28.032 int field vaddr  
|  |  |  |  |  |  IDENT "stack" 6:28.027 struct "stack" variable param lval 
|  |  |  |  |  |  FIELD "top" 6:28.033 field {stack} 
|  |  |  '=' "=" 6:29.013        
|  |  |  |  '.' "." 6:29.008 int field vaddr  
|  |  |  |  |  IDENT "stack" 6:29.003 struct "stack" variable param lval 
|  |  |  |  |  FIELD "top" 6:29.009 field {stack} 
|  |  |  |  '-' "-" 6:29.025 int vreg  
|  |  |  |  |  '.' "." 6:29.020 int field vaddr  
|  |  |  |  |  |  IDENT "stack" 6:29.015 struct "stack" variable param lval 
|  |  |  |  |  |  FIELD "top" 6:29.021 field {stack} 
|  |  |  |  |  INTCON "1" 6:29.027 int const 
|  |  |  RETURN "return" 6:30.003 string variable lval 
|  |  |  |  IDENT "tmp" 6:30.010 string variable lval 
|  FUNCTION "" 6:33.000         
|  |  BOOL "bool" 6:33.000  bool 
|  |  |  DECLID "empty" 6:33.005 bool function 
|  |  PARAMLIST "(" 6:33.011       
|  |  |  TYPEID "stack" 6:33.012 struct "stack" 
|  |  |  |  DECLID "stack" 6:33.018 struct "stack" variable param lval 
|  |  BLOCK "{" 6:33.025       
|  |  |  RETURN "return" 6:34.003 bool vreg 
|  |  |  |  EQ "==" 6:34.020 bool vreg  
|  |  |  |  |  '.' "." 6:34.015 int field vaddr  
|  |  |  |  |  |  IDENT "stack" 6:34.010 struct "stack" variable param lval 
|  |  |  |  |  |  FIELD "top" 6:34.016 field {stack} 
|  |  |  |  |  NEG "-" 6:34.024 int vreg 
|  |  |  |  |  |  INTCON "1" 6:34.025 int const 
|  VARDECL "=" 6:38.014        
|  |  ARRAY "[]" 6:38.006 string array lval vaddr  
|  |  |  STRING "string" 6:38.000 string 
|  |  |  DECLID "argv" 6:38.009 string array variable lval 
|  |  CALL "(" 6:38.024 string array vreg vaddr prototype 
|  |  |  IDENT "getargv" 6:38.016 string array vaddr prototype 
|  VARDECL "=" 6:39.012        
|  |  TYPEID "stack" 6:39.000 struct "stack" 
|  |  |  DECLID "stack" 6:39.006 struct "stack" variable lval 
|  |  CALL "(" 6:39.024 struct "stack"  
|  |  |  IDENT "new_stack" 6:39.014 struct "stack" function 
|  |  |  INTCON "100" 6:39.025 int const 
|  VARDECL "=" 6:41.009        
|  |  INT "int" 6:41.000 int lval 
|  |  |  DECLID "argi" 6:41.004 int variable lval 
|  |  INTCON "0" 6:41.011 int const vreg 
|  WHILE "while" 6:42.000        
|  |  NE "!=" 6:42.018 bool vreg  
|  |  |  INDEX "[" 6:42.011 string vreg vaddr  
|  |  |  |  IDENT "argv" 6:42.007 string array variable lval 
|  |  |  |  IDENT "argi" 6:42.012 int variable lval 
|  |  |  NULL "null" 6:42.021  null 
|  |  BLOCK "{" 6:42.027        
|  |  |  CALL "(" 6:43.008  void   
|  |  |  |  IDENT "push" 6:43.003 void function 
|  |  |  |  IDENT "stack" 6:43.009 struct "stack" variable lval 
|  |  |  |  INDEX "[" 6:43.020 string vreg vaddr  
|  |  |  |  |  IDENT "argv" 6:43.016 string array variable lval 
|  |  |  |  |  IDENT "argi" 6:43.021 int variable lval 
|  |  |  '=' "=" 6:44.008        
|  |  |  |  IDENT "argi" 6:44.003 int variable lval 
|  |  |  |  '+' "+" 6:44.015 int vreg  
|  |  |  |  |  IDENT "argi" 6:44.010 int variable lval 
|  |  |  |  |  INTCON "1" 6:44.017 int const 
|  WHILE "while" 6:47.000        
|  |  '!' "!" 6:47.007 bool vreg 
|  |  |  CALL "(" 6:47.015  bool  
|  |  |  |  IDENT "empty" 6:47.009 bool function 
|  |  |  |  IDENT "stack" 6:47.016 struct "stack" variable lval 
|  |  BLOCK "{" 6:47.024        
|  |  |  CALL "(" 6:48.008 void prototype  
|  |  |  |  IDENT "puts" 6:48.003 void prototype 
|  |  |  |  CALL "(" 6:48.013 string  
|  |  |  |  |  IDENT "pop" 6:48.009 string function 
|  |  |  |  |  IDENT "stack" 6:48.014 struct "stack" variable lval 
|  |  |  CALL "(" 6:49.008 void prototype 
|  |  |  |  IDENT "endl" 6:49.003 void prototype 


type_reg is = char** 
struct s_stack {
        char*** f_stack_data;
        int* f_stack_size;
        int* f_stack_top;
};
char** __argv;
struct s_stack* s_stack;
int __argi;
struct s_stack* __new_stack (
        int _12_size)
{
        struct s_stack*  p1 = xcalloc (1, sizeof(struct s_stack));
        struct s_stack* _12_stack = p1;
        char**  *a3 = &_12_stack->f_stack_data;
        char**  c5 = xcalloc (_12_size, sizeof(char*));
        *a3 = c5;
        int  *a9 = &_12_stack->f_stack_size;
        *a9 = _12_size;
        int  *a11 = &_12_stack->f_stack_top;
        int  i13 = -1;
        *a11 = i13;
return _12_stack;
};
char __push (
        struct s_stack* _13_stack,

        char* _13_str)
{
        int  *a15 = &_13_stack->f_stack_top;
        int  *a17 = &_13_stack->f_stack_top;
        int  i19 = *a17 + 1;
        *a15 = i19;
        char**  *a21 = &_13_stack->f_stack_data;
        int  *a23 = &_13_stack->f_stack_top;
        int  *a25 = &_13_stack->f_stack_top;
        char**  *a27 = &_13_stack->f_stack_data;
        char*  *a29 = &*a27[*a25];
        *a29 = _13_str;
};
char* __pop (
        struct s_stack* _14_stack)
{
        char**  *a31 = &_14_stack->f_stack_data;
        int  *a33 = &_14_stack->f_stack_top;
        int  *a35 = &_14_stack->f_stack_top;
        char**  *a37 = &_14_stack->f_stack_data;
        char*  *a39 = &*a37[*a35];
        char* _14_tmp = *a39;
        int  *a41 = &_14_stack->f_stack_top;
        int  *a43 = &_14_stack->f_stack_top;
        int  i45 = *a43 - 1;
        *a41 = i45;
return _14_tmp;
};
char __empty (
        struct s_stack* _15_stack)
{
        int  *a47 = &_15_stack->f_stack_top;
        int  i49 = -1;
        char  c51 = *a47 == i49;
return c51;
};
void __ocmain (void) {
        char**  a53 = __getargv();
        char** __argv = a53;
        struct s_stack*  p55 = __new_stack(100);
        struct s_stack* s_stack = p55;
        int __argi = 0;
while_6_42_0:;
        char*  *a57 = &__argv[__argi];
        char  c59 = *a57 != 0;
        if(!c59) goto break_6_42_0;
        char*  *a61 = &__argv[__argi];
        __push(s_stack, *a61);
        int  i64 = __argi + 1;
         __argi = i64;
        goto while_6_42_0;
break_6_42_0:;
while_6_47_0:;
        char  c66 = __empty(s_stack);
        char  c68 = __empty(s_stack);
        char  c70 = !c68;
        if(!c70) goto break_6_47_0;
        char*  c72 = __pop(s_stack);
        __puts(c72);
        __endl();
        goto while_6_47_0;
break_6_47_0:;
return;
};
