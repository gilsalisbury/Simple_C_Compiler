ROOT "" 0:0.000                            
|  PROTOTYPE "" 5:23.000        
|  |  VOID "void" 5:23.000  void 
|  |  |  DECLID "__assert_fail" 5:23.005 prototype 
|  |  PARAMLIST "(" 5:23.019         
|  |  |  STRING "string" 5:23.020 string 
|  |  |  |  DECLID "expr" 5:23.027 string variable param lval 
|  |  |  STRING "string" 5:23.033 string 
|  |  |  |  DECLID "file" 5:23.040 string variable param lval 
|  |  |  INT "int" 5:23.046   int 
|  |  |  |  DECLID "line" 5:23.050 int variable param lval 
|  PROTOTYPE "" 5:24.000        
|  |  VOID "void" 5:24.000  void 
|  |  |  DECLID "putb" 5:24.005 prototype 
|  |  PARAMLIST "(" 5:24.010       
|  |  |  BOOL "bool" 5:24.011  bool 
|  |  |  |  DECLID "b" 5:24.016 bool variable param lval 
|  PROTOTYPE "" 5:25.000        
|  |  VOID "void" 5:25.000  void 
|  |  |  DECLID "putc" 5:25.005 prototype 
|  |  PARAMLIST "(" 5:25.010       
|  |  |  CHAR "char" 5:25.011  char 
|  |  |  |  DECLID "c" 5:25.016 char variable param lval 
|  PROTOTYPE "" 5:26.000        
|  |  VOID "void" 5:26.000  void 
|  |  |  DECLID "puti" 5:26.005 prototype 
|  |  PARAMLIST "(" 5:26.010       
|  |  |  INT "int" 5:26.011   int 
|  |  |  |  DECLID "i" 5:26.015 int variable param lval 
|  PROTOTYPE "" 5:27.000        
|  |  VOID "void" 5:27.000  void 
|  |  |  DECLID "puts" 5:27.005 prototype 
|  |  PARAMLIST "(" 5:27.010       
|  |  |  STRING "string" 5:27.011 string 
|  |  |  |  DECLID "s" 5:27.018 string variable param lval 
|  PROTOTYPE "" 5:28.000        
|  |  VOID "void" 5:28.000  void 
|  |  |  DECLID "endl" 5:28.005 prototype 
|  |  PARAMLIST "(" 5:28.010       
|  PROTOTYPE "" 5:29.000        
|  |  INT "int" 5:29.000   int 
|  |  |  DECLID "getc" 5:29.004 int prototype 
|  |  PARAMLIST "(" 5:29.009       
|  PROTOTYPE "" 5:30.000        
|  |  STRING "string" 5:30.000 string 
|  |  |  DECLID "getw" 5:30.007 string prototype 
|  |  PARAMLIST "(" 5:30.012       
|  PROTOTYPE "" 5:31.000        
|  |  STRING "string" 5:31.000 string 
|  |  |  DECLID "getln" 5:31.007 string prototype 
|  |  PARAMLIST "(" 5:31.013       
|  PROTOTYPE "" 5:32.006        
|  |  ARRAY "[]" 5:32.006 string array lval vaddr  
|  |  |  STRING "string" 5:32.000 string 
|  |  |  DECLID "getargv" 5:32.009 string array prototype 
|  |  PARAMLIST "(" 5:32.017       
|  PROTOTYPE "" 5:33.000        
|  |  VOID "void" 5:33.000  void 
|  |  |  DECLID "exit" 5:33.005 prototype 
|  |  PARAMLIST "(" 5:33.010       
|  |  |  INT "int" 5:33.011   int 
|  |  |  |  DECLID "status" 5:33.015 int variable param lval 
|  STRUCT "struct" 6:4.000         
|  |  TYPEID "node" 6:4.007 struct "node" 
|  |  STRING "string" 6:5.003 string 
|  |  |  FIELD "data" 6:5.010 string field {node} 
|  |  TYPEID "node" 6:6.003 struct "node" 
|  |  |  FIELD "link" 6:6.008 struct "node" field {node} 
|  STRUCT "struct" 6:9.000        
|  |  TYPEID "stack" 6:9.007 struct "stack" 
|  |  TYPEID "node" 6:10.003 struct "node" 
|  |  |  FIELD "top" 6:10.008 struct "node" field {stack} 
|  FUNCTION "" 6:13.000         
|  |  BOOL "bool" 6:13.000  bool 
|  |  |  DECLID "empty" 6:13.005 bool function 
|  |  PARAMLIST "(" 6:13.011       
|  |  |  TYPEID "stack" 6:13.012 struct "stack" 
|  |  |  |  DECLID "stack" 6:13.018 struct "stack" variable param lval 
|  |  BLOCK "{" 6:13.025         
|  |  |  BLOCK "{" 6:14.003       
|  |  |  |  IFELSE "if" 6:14.004        
|  |  |  |  |  '!' "!" 6:14.008 bool vreg 
|  |  |  |  |  |  NE "!=" 6:14.016 bool vreg  
|  |  |  |  |  |  |  IDENT "stack" 6:14.010 struct "stack" variable param lval 
|  |  |  |  |  |  |  NULL "null" 6:14.019  null 
|  |  |  |  |  CALL "(" 6:14.040 prototype    
|  |  |  |  |  |  IDENT "__assert_fail" 6:14.026 prototype 
|  |  |  |  |  |  STRINGCON ""stack != null"" 6:14.041 string const 
|  |  |  |  |  |  STRINGCON ""oc.oc"" 6:14.058 string const 
|  |  |  |  |  |  INTCON "14" 6:14.067 int const 
|  |  |  ';' ";" 6:14.072       
|  |  |  RETURN "return" 6:15.003 bool vreg 
|  |  |  |  EQ "==" 6:15.020 bool vreg  
|  |  |  |  |  '.' "." 6:15.015 struct "node" field vaddr  
|  |  |  |  |  |  IDENT "stack" 6:15.010 struct "stack" variable param lval 
|  |  |  |  |  |  FIELD "top" 6:15.016 field 
|  |  |  |  |  NULL "null" 6:15.023  null 
|  FUNCTION "" 6:18.000         
|  |  TYPEID "stack" 6:18.000 struct "stack" 
|  |  |  DECLID "new_stack" 6:18.006 struct "stack" function 
|  |  PARAMLIST "(" 6:18.016       
|  |  BLOCK "{" 6:18.019         
|  |  |  VARDECL "=" 6:19.015        
|  |  |  |  TYPEID "stack" 6:19.003 struct "stack" 
|  |  |  |  |  DECLID "stack" 6:19.009 struct "stack" variable lval 
|  |  |  |  TYPEID "stack" 6:19.021 struct "stack" vreg 
|  |  |  |  |  NEW "new" 6:19.017       
|  |  |  '=' "=" 6:20.013        
|  |  |  |  '.' "." 6:20.008 struct "node" field vaddr  
|  |  |  |  |  IDENT "stack" 6:20.003 struct "stack" variable lval 
|  |  |  |  |  FIELD "top" 6:20.009 field 
|  |  |  |  NULL "null" 6:20.015 null vreg 
|  |  |  RETURN "return" 6:21.003 struct "stack" variable lval 
|  |  |  |  IDENT "stack" 6:21.010 struct "stack" variable lval 
|  FUNCTION "" 6:24.000         
|  |  VOID "void" 6:24.000  void 
|  |  |  DECLID "push" 6:24.005 void function 
|  |  PARAMLIST "(" 6:24.010        
|  |  |  TYPEID "stack" 6:24.011 struct "stack" 
|  |  |  |  DECLID "stack" 6:24.017 struct "stack" variable param lval 
|  |  |  STRING "string" 6:24.024 string 
|  |  |  |  DECLID "str" 6:24.031 string variable param lval 
|  |  BLOCK "{" 6:24.036            
|  |  |  BLOCK "{" 6:25.003       
|  |  |  |  IFELSE "if" 6:25.004        
|  |  |  |  |  '!' "!" 6:25.008 bool vreg 
|  |  |  |  |  |  NE "!=" 6:25.016 bool vreg  
|  |  |  |  |  |  |  IDENT "stack" 6:25.010 struct "stack" variable param lval 
|  |  |  |  |  |  |  NULL "null" 6:25.019  null 
|  |  |  |  |  CALL "(" 6:25.040 prototype    
|  |  |  |  |  |  IDENT "__assert_fail" 6:25.026 prototype 
|  |  |  |  |  |  STRINGCON ""stack != null"" 6:25.041 string const 
|  |  |  |  |  |  STRINGCON ""oc.oc"" 6:25.058 string const 
|  |  |  |  |  |  INTCON "25" 6:25.067 int const 
|  |  |  ';' ";" 6:25.072       
|  |  |  VARDECL "=" 6:26.012        
|  |  |  |  TYPEID "node" 6:26.003 struct "node" 
|  |  |  |  |  DECLID "tmp" 6:26.008 struct "node" variable lval 
|  |  |  |  TYPEID "node" 6:26.018 struct "node" vreg 
|  |  |  |  |  NEW "new" 6:26.014       
|  |  |  '=' "=" 6:27.012        
|  |  |  |  '.' "." 6:27.006 string field vaddr  
|  |  |  |  |  IDENT "tmp" 6:27.003 struct "node" variable lval 
|  |  |  |  |  FIELD "data" 6:27.007 field 
|  |  |  |  IDENT "str" 6:27.014 string variable param vreg 
|  |  |  '=' "=" 6:28.012        
|  |  |  |  '.' "." 6:28.006 struct "node" field vaddr  
|  |  |  |  |  IDENT "tmp" 6:28.003 struct "node" variable lval 
|  |  |  |  |  FIELD "link" 6:28.007 field 
|  |  |  |  '.' "." 6:28.019 struct "node" field vaddr  
|  |  |  |  |  IDENT "stack" 6:28.014 struct "stack" variable param lval 
|  |  |  |  |  FIELD "top" 6:28.020 field 
|  |  |  '=' "=" 6:29.013        
|  |  |  |  '.' "." 6:29.008 struct "node" field vaddr  
|  |  |  |  |  IDENT "stack" 6:29.003 struct "stack" variable param lval 
|  |  |  |  |  FIELD "top" 6:29.009 field 
|  |  |  |  IDENT "tmp" 6:29.015 struct "node" variable lval 
|  FUNCTION "" 6:32.000         
|  |  STRING "string" 6:32.000 string 
|  |  |  DECLID "pop" 6:32.007 string function 
|  |  PARAMLIST "(" 6:32.011       
|  |  |  TYPEID "stack" 6:32.012 struct "stack" 
|  |  |  |  DECLID "stack" 6:32.018 struct "stack" variable param lval 
|  |  BLOCK "{" 6:32.025             
|  |  |  BLOCK "{" 6:33.003       
|  |  |  |  IFELSE "if" 6:33.004        
|  |  |  |  |  '!' "!" 6:33.008 bool vreg 
|  |  |  |  |  |  NE "!=" 6:33.016 bool vreg  
|  |  |  |  |  |  |  IDENT "stack" 6:33.010 struct "stack" variable param lval 
|  |  |  |  |  |  |  NULL "null" 6:33.019  null 
|  |  |  |  |  CALL "(" 6:33.040 prototype    
|  |  |  |  |  |  IDENT "__assert_fail" 6:33.026 prototype 
|  |  |  |  |  |  STRINGCON ""stack != null"" 6:33.041 string const 
|  |  |  |  |  |  STRINGCON ""oc.oc"" 6:33.058 string const 
|  |  |  |  |  |  INTCON "33" 6:33.067 int const 
|  |  |  ';' ";" 6:33.072       
|  |  |  BLOCK "{" 6:34.003       
|  |  |  |  IFELSE "if" 6:34.004        
|  |  |  |  |  '!' "!" 6:34.008 bool vreg 
|  |  |  |  |  |  '!' "!" 6:34.010 bool vreg 
|  |  |  |  |  |  |  CALL "(" 6:34.018  bool  
|  |  |  |  |  |  |  |  IDENT "empty" 6:34.012 bool function 
|  |  |  |  |  |  |  |  IDENT "stack" 6:34.019 struct "stack" variable param lval 
|  |  |  |  |  CALL "(" 6:34.042 prototype    
|  |  |  |  |  |  IDENT "__assert_fail" 6:34.028 prototype 
|  |  |  |  |  |  STRINGCON ""! empty (stack)"" 6:34.043 string const 
|  |  |  |  |  |  STRINGCON ""oc.oc"" 6:34.062 string const 
|  |  |  |  |  |  INTCON "34" 6:34.071 int const 
|  |  |  ';' ";" 6:34.076       
|  |  |  VARDECL "=" 6:35.014        
|  |  |  |  STRING "string" 6:35.003 string lval 
|  |  |  |  |  DECLID "tmp" 6:35.010 string variable lval 
|  |  |  |  '.' "." 6:35.025 string field vreg vaddr  
|  |  |  |  |  '.' "." 6:35.021 struct "node" field vaddr  
|  |  |  |  |  |  IDENT "stack" 6:35.016 struct "stack" variable param lval 
|  |  |  |  |  |  FIELD "top" 6:35.022 field 
|  |  |  |  |  FIELD "data" 6:35.026 field 
|  |  |  '=' "=" 6:36.013        
|  |  |  |  '.' "." 6:36.008 struct "node" field vaddr  
|  |  |  |  |  IDENT "stack" 6:36.003 struct "stack" variable param lval 
|  |  |  |  |  FIELD "top" 6:36.009 field 
|  |  |  |  '.' "." 6:36.024 struct "node" field vaddr  
|  |  |  |  |  '.' "." 6:36.020 struct "node" field vaddr  
|  |  |  |  |  |  IDENT "stack" 6:36.015 struct "stack" variable param lval 
|  |  |  |  |  |  FIELD "top" 6:36.021 field 
|  |  |  |  |  FIELD "link" 6:36.025 field 
|  |  |  RETURN "return" 6:37.003 string variable lval 
|  |  |  |  IDENT "tmp" 6:37.010 string variable lval 
|  VARDECL "=" 6:42.014        
|  |  ARRAY "[]" 6:42.006 string array lval vaddr  
|  |  |  STRING "string" 6:42.000 string 
|  |  |  DECLID "argv" 6:42.009 string array variable lval 
|  |  CALL "(" 6:42.024 string array vreg prototype 
|  |  |  IDENT "getargv" 6:42.016 string array prototype 
|  VARDECL "=" 6:43.012        
|  |  TYPEID "stack" 6:43.000 struct "stack" 
|  |  |  DECLID "stack" 6:43.006 struct "stack" variable lval 
|  |  CALL "(" 6:43.024 struct "stack" 
|  |  |  IDENT "new_stack" 6:43.014 struct "stack" function 
|  VARDECL "=" 6:44.009        
|  |  INT "int" 6:44.000 int lval 
|  |  |  DECLID "argi" 6:44.004 int variable lval 
|  |  INTCON "0" 6:44.011 int const vreg 
|  WHILE "while" 6:46.000        
|  |  NE "!=" 6:46.018 bool vreg  
|  |  |  INDEX "[" 6:46.011 string vreg  
|  |  |  |  IDENT "argv" 6:46.007 string array variable lval 
|  |  |  |  IDENT "argi" 6:46.012 int variable lval 
|  |  |  NULL "null" 6:46.021  null 
|  |  BLOCK "{" 6:46.027        
|  |  |  CALL "(" 6:47.008  void   
|  |  |  |  IDENT "push" 6:47.003 void function 
|  |  |  |  IDENT "stack" 6:47.009 struct "stack" variable lval 
|  |  |  |  INDEX "[" 6:47.020 string vreg  
|  |  |  |  |  IDENT "argv" 6:47.016 string array variable lval 
|  |  |  |  |  IDENT "argi" 6:47.021 int variable lval 
|  |  |  '=' "=" 6:48.008        
|  |  |  |  IDENT "argi" 6:48.003 int variable lval 
|  |  |  |  '+' "+" 6:48.015 int vreg  
|  |  |  |  |  IDENT "argi" 6:48.010 int variable lval 
|  |  |  |  |  INTCON "1" 6:48.017 int const 
|  WHILE "while" 6:51.000        
|  |  '!' "!" 6:51.007 bool vreg 
|  |  |  CALL "(" 6:51.015  bool  
|  |  |  |  IDENT "empty" 6:51.009 bool function 
|  |  |  |  IDENT "stack" 6:51.016 struct "stack" variable lval 
|  |  BLOCK "{" 6:51.024        
|  |  |  CALL "(" 6:52.008 prototype  
|  |  |  |  IDENT "puts" 6:52.003 prototype 
|  |  |  |  CALL "(" 6:52.013 string  
|  |  |  |  |  IDENT "pop" 6:52.009 string function 
|  |  |  |  |  IDENT "stack" 6:52.014 struct "stack" variable lval 
|  |  |  CALL "(" 6:53.008 prototype 
|  |  |  |  IDENT "endl" 6:53.003 prototype 
