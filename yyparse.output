Terminals unused in grammar

   TOK_BLOCK
   TOK_CALL
   TOK_IFELSE
   TOK_INITDECL
   TOK_INDEX
   TOK_NEG
   TOK_NEWARRAY
   TOK_FIELD
   TOK_ROOT
   TOK_DECLID
   TOK_NEWSTRING
   TOK_PARAMLIST
   TOK_PARAM
   TOK_FUNCTION
   TOK_RETURNVOID
   TOK_DUMMY
   TOK_VARDECL
   TOK_PROTOTYPE


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program structdef
    3        | program function
    4        | program statement
    5        | program error '}'
    6        | program error ';'
    7        | /* empty */

    8 function: identdecl identdeclst ')' funcblock
    9         | identdecl '(' ')' funcblock
   10         | identdecl identdeclst ')' ';'
   11         | identdecl '(' ')' ';'

   12 identdeclst: identdeclst ',' identdecl
   13            | '(' identdecl

   14 identdecl: basetype TOK_ARRAY TOK_IDENT
   15          | basetype TOK_IDENT
   16          | TOK_IDENT TOK_ARRAY TOK_IDENT
   17          | TOK_IDENT TOK_IDENT

   18 structdef: TOK_STRUCT TOK_IDENT fielddeclst '}'
   19          | TOK_STRUCT TOK_IDENT '{' '}'

   20 fielddeclst: fielddeclst fielddecl
   21            | '{' fielddecl

   22 fielddecl: basetype TOK_ARRAY TOK_IDENT ';'
   23          | basetype TOK_IDENT ';'
   24          | TOK_IDENT TOK_ARRAY TOK_IDENT ';'
   25          | TOK_IDENT TOK_IDENT ';'

   26 block: stmtlist '}'
   27      | '{' '}'
   28      | ';'

   29 funcblock: stmtlist '}'
   30          | '{' '}'

   31 stmtlist: stmtlist statement
   32         | '{' statement

   33 statement: block
   34          | vardecl
   35          | expr ';'
   36          | while
   37          | ifelse
   38          | return

   39 while: TOK_WHILE '(' expr ')' statement

   40 ifelse: if else
   41       | if

   42 if: TOK_IF '(' expr ')' statement

   43 else: TOK_ELSE statement

   44 return: TOK_RETURN expr ';'
   45       | TOK_RETURN ';'

   46 basetype: TOK_VOID
   47         | TOK_BOOL
   48         | TOK_CHAR
   49         | TOK_INT
   50         | TOK_STRING
   51         | TOK_TYPEID

   52 argslist: argslist ',' expr
   53         | '(' expr

   54 expr: allocator
   55     | call
   56     | variable
   57     | constant
   58     | expr '=' expr
   59     | expr TOK_EQ expr
   60     | expr TOK_NE expr
   61     | expr TOK_LT expr
   62     | expr TOK_LE expr
   63     | expr TOK_GT expr
   64     | expr TOK_GE expr
   65     | expr '+' expr
   66     | expr '-' expr
   67     | expr '/' expr
   68     | expr '*' expr
   69     | expr '%' expr
   70     | '-' expr
   71     | '+' expr
   72     | TOK_ORD expr
   73     | TOK_CHR expr
   74     | '!' expr
   75     | '.' expr
   76     | '(' expr ')'

   77 vardecl: identdecl '=' expr ';'

   78 allocator: TOK_NEW TOK_IDENT '(' ')'
   79          | TOK_NEW TOK_STRING '(' expr ')'
   80          | TOK_NEW basetype '[' expr ']'

   81 call: TOK_IDENT argslist ')'
   82     | TOK_IDENT '(' ')'

   83 variable: expr '[' expr ']'
   84         | TOK_IDENT
   85         | expr '.' TOK_IDENT

   86 constant: TOK_INTCON
   87         | TOK_CHARCON
   88         | TOK_STRINGCON
   89         | TOK_FALSE
   90         | TOK_TRUE
   91         | TOK_NULL


Terminals, with rules where they appear

$end (0) 0
'!' (33) 74
'%' (37) 69
'(' (40) 9 11 13 39 42 53 76 78 79 82
')' (41) 8 9 10 11 39 42 76 78 79 81 82
'*' (42) 68
'+' (43) 65 71
',' (44) 12 52
'-' (45) 66 70
'.' (46) 75 85
'/' (47) 67
';' (59) 6 10 11 22 23 24 25 28 35 44 45 77
'=' (61) 58 77
'[' (91) 80 83
']' (93) 80 83
'{' (123) 19 21 27 30 32
'}' (125) 5 18 19 26 27 29 30
error (256) 5 6
TOK_VOID (258) 46
TOK_BOOL (259) 47
TOK_CHAR (260) 48
TOK_INT (261) 49
TOK_STRING (262) 50 79
TOK_IF (263) 42
TOK_ELSE (264) 43
TOK_WHILE (265) 39
TOK_RETURN (266) 44 45
TOK_STRUCT (267) 18 19
TOK_FALSE (268) 89
TOK_TRUE (269) 90
TOK_NULL (270) 91
TOK_NEW (271) 78 79 80
TOK_ARRAY (272) 14 16 22 24
TOK_EQ (273) 59
TOK_NE (274) 60
TOK_LT (275) 61
TOK_LE (276) 62
TOK_GT (277) 63
TOK_GE (278) 64
TOK_IDENT (279) 14 15 16 17 18 19 22 23 24 25 78 81 82 84 85
TOK_INTCON (280) 86
TOK_CHARCON (281) 87
TOK_STRINGCON (282) 88
TOK_BLOCK (283)
TOK_CALL (284)
TOK_IFELSE (285)
TOK_INITDECL (286)
TOK_INDEX (287)
TOK_POS (288)
TOK_NEG (289)
TOK_NEWARRAY (290)
TOK_TYPEID (291) 51
TOK_FIELD (292)
TOK_ORD (293) 72
TOK_CHR (294) 73
TOK_ROOT (295)
TOK_DECLID (296)
TOK_NEWSTRING (297)
TOK_PARAMLIST (298)
TOK_PARAM (299)
TOK_FUNCTION (300)
TOK_RETURNVOID (301)
TOK_DUMMY (302)
TOK_VARDECL (303)
TOK_PROTOTYPE (304)


Nonterminals, with rules where they appear

$accept (66)
    on left: 0
start (67)
    on left: 1, on right: 0
program (68)
    on left: 2 3 4 5 6 7, on right: 1 2 3 4 5 6
function (69)
    on left: 8 9 10 11, on right: 3
identdeclst (70)
    on left: 12 13, on right: 8 10 12
identdecl (71)
    on left: 14 15 16 17, on right: 8 9 10 11 12 13 77
structdef (72)
    on left: 18 19, on right: 2
fielddeclst (73)
    on left: 20 21, on right: 18 20
fielddecl (74)
    on left: 22 23 24 25, on right: 20 21
block (75)
    on left: 26 27 28, on right: 33
funcblock (76)
    on left: 29 30, on right: 8 9
stmtlist (77)
    on left: 31 32, on right: 26 29 31
statement (78)
    on left: 33 34 35 36 37 38, on right: 4 31 32 39 42 43
while (79)
    on left: 39, on right: 36
ifelse (80)
    on left: 40 41, on right: 37
if (81)
    on left: 42, on right: 40 41
else (82)
    on left: 43, on right: 40
return (83)
    on left: 44 45, on right: 38
basetype (84)
    on left: 46 47 48 49 50 51, on right: 14 15 22 23 80
argslist (85)
    on left: 52 53, on right: 52 81
expr (86)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
    72 73 74 75 76, on right: 35 39 42 44 52 53 58 59 60 61 62 63 64
    65 66 67 68 69 70 71 72 73 74 75 76 77 79 80 83 85
vardecl (87)
    on left: 77, on right: 34
allocator (88)
    on left: 78 79 80, on right: 54
call (89)
    on left: 81 82, on right: 55
variable (90)
    on left: 83 84 85, on right: 56
constant (91)
    on left: 86 87 88 89 90 91, on right: 57


state 0

    0 $accept: . start $end

    $default  reduce using rule 7 (program)

    start    go to state 1
    program  go to state 2


state 1

    0 $accept: start . $end

    $end  shift, and go to state 3


state 2

    1 start: program .
    2 program: program . structdef
    3        | program . function
    4        | program . statement
    5        | program . error '}'
    6        | program . error ';'

    error          shift, and go to state 4
    TOK_VOID       shift, and go to state 5
    TOK_BOOL       shift, and go to state 6
    TOK_CHAR       shift, and go to state 7
    TOK_INT        shift, and go to state 8
    TOK_STRING     shift, and go to state 9
    TOK_IF         shift, and go to state 10
    TOK_WHILE      shift, and go to state 11
    TOK_RETURN     shift, and go to state 12
    TOK_STRUCT     shift, and go to state 13
    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_TYPEID     shift, and go to state 22
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30
    ';'            shift, and go to state 31

    $end  reduce using rule 1 (start)

    function   go to state 32
    identdecl  go to state 33
    structdef  go to state 34
    block      go to state 35
    stmtlist   go to state 36
    statement  go to state 37
    while      go to state 38
    ifelse     go to state 39
    if         go to state 40
    return     go to state 41
    basetype   go to state 42
    expr       go to state 43
    vardecl    go to state 44
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 3

    0 $accept: start $end .

    $default  accept


state 4

    5 program: program error . '}'
    6        | program error . ';'

    '}'  shift, and go to state 49
    ';'  shift, and go to state 50


state 5

   46 basetype: TOK_VOID .

    $default  reduce using rule 46 (basetype)


state 6

   47 basetype: TOK_BOOL .

    $default  reduce using rule 47 (basetype)


state 7

   48 basetype: TOK_CHAR .

    $default  reduce using rule 48 (basetype)


state 8

   49 basetype: TOK_INT .

    $default  reduce using rule 49 (basetype)


state 9

   50 basetype: TOK_STRING .

    $default  reduce using rule 50 (basetype)


state 10

   42 if: TOK_IF . '(' expr ')' statement

    '('  shift, and go to state 51


state 11

   39 while: TOK_WHILE . '(' expr ')' statement

    '('  shift, and go to state 52


state 12

   44 return: TOK_RETURN . expr ';'
   45       | TOK_RETURN . ';'

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30
    ';'            shift, and go to state 54

    expr       go to state 55
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 13

   18 structdef: TOK_STRUCT . TOK_IDENT fielddeclst '}'
   19          | TOK_STRUCT . TOK_IDENT '{' '}'

    TOK_IDENT  shift, and go to state 56


state 14

   89 constant: TOK_FALSE .

    $default  reduce using rule 89 (constant)


state 15

   90 constant: TOK_TRUE .

    $default  reduce using rule 90 (constant)


state 16

   91 constant: TOK_NULL .

    $default  reduce using rule 91 (constant)


state 17

   78 allocator: TOK_NEW . TOK_IDENT '(' ')'
   79          | TOK_NEW . TOK_STRING '(' expr ')'
   80          | TOK_NEW . basetype '[' expr ']'

    TOK_VOID    shift, and go to state 5
    TOK_BOOL    shift, and go to state 6
    TOK_CHAR    shift, and go to state 7
    TOK_INT     shift, and go to state 8
    TOK_STRING  shift, and go to state 57
    TOK_IDENT   shift, and go to state 58
    TOK_TYPEID  shift, and go to state 22

    basetype  go to state 59


state 18

   16 identdecl: TOK_IDENT . TOK_ARRAY TOK_IDENT
   17          | TOK_IDENT . TOK_IDENT
   81 call: TOK_IDENT . argslist ')'
   82     | TOK_IDENT . '(' ')'
   84 variable: TOK_IDENT .

    TOK_ARRAY  shift, and go to state 60
    TOK_IDENT  shift, and go to state 61
    '('        shift, and go to state 62

    $default  reduce using rule 84 (variable)

    argslist  go to state 63


state 19

   86 constant: TOK_INTCON .

    $default  reduce using rule 86 (constant)


state 20

   87 constant: TOK_CHARCON .

    $default  reduce using rule 87 (constant)


state 21

   88 constant: TOK_STRINGCON .

    $default  reduce using rule 88 (constant)


state 22

   51 basetype: TOK_TYPEID .

    $default  reduce using rule 51 (basetype)


state 23

   72 expr: TOK_ORD . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 64
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 24

   73 expr: TOK_CHR . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 65
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 25

   76 expr: '(' . expr ')'

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 66
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 26

   27 block: '{' . '}'
   32 stmtlist: '{' . statement

    TOK_VOID       shift, and go to state 5
    TOK_BOOL       shift, and go to state 6
    TOK_CHAR       shift, and go to state 7
    TOK_INT        shift, and go to state 8
    TOK_STRING     shift, and go to state 9
    TOK_IF         shift, and go to state 10
    TOK_WHILE      shift, and go to state 11
    TOK_RETURN     shift, and go to state 12
    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_TYPEID     shift, and go to state 22
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26
    '}'            shift, and go to state 67
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30
    ';'            shift, and go to state 31

    identdecl  go to state 68
    block      go to state 35
    stmtlist   go to state 36
    statement  go to state 69
    while      go to state 38
    ifelse     go to state 39
    if         go to state 40
    return     go to state 41
    basetype   go to state 42
    expr       go to state 43
    vardecl    go to state 44
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 27

   71 expr: '+' . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 70
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 28

   70 expr: '-' . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 71
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 29

   74 expr: '!' . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 72
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 30

   75 expr: '.' . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 73
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 31

   28 block: ';' .

    $default  reduce using rule 28 (block)


state 32

    3 program: program function .

    $default  reduce using rule 3 (program)


state 33

    8 function: identdecl . identdeclst ')' funcblock
    9         | identdecl . '(' ')' funcblock
   10         | identdecl . identdeclst ')' ';'
   11         | identdecl . '(' ')' ';'
   77 vardecl: identdecl . '=' expr ';'

    '('  shift, and go to state 74
    '='  shift, and go to state 75

    identdeclst  go to state 76


state 34

    2 program: program structdef .

    $default  reduce using rule 2 (program)


state 35

   33 statement: block .

    $default  reduce using rule 33 (statement)


state 36

   26 block: stmtlist . '}'
   31 stmtlist: stmtlist . statement

    TOK_VOID       shift, and go to state 5
    TOK_BOOL       shift, and go to state 6
    TOK_CHAR       shift, and go to state 7
    TOK_INT        shift, and go to state 8
    TOK_STRING     shift, and go to state 9
    TOK_IF         shift, and go to state 10
    TOK_WHILE      shift, and go to state 11
    TOK_RETURN     shift, and go to state 12
    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_TYPEID     shift, and go to state 22
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26
    '}'            shift, and go to state 77
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30
    ';'            shift, and go to state 31

    identdecl  go to state 68
    block      go to state 35
    stmtlist   go to state 36
    statement  go to state 78
    while      go to state 38
    ifelse     go to state 39
    if         go to state 40
    return     go to state 41
    basetype   go to state 42
    expr       go to state 43
    vardecl    go to state 44
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 37

    4 program: program statement .

    $default  reduce using rule 4 (program)


state 38

   36 statement: while .

    $default  reduce using rule 36 (statement)


state 39

   37 statement: ifelse .

    $default  reduce using rule 37 (statement)


state 40

   40 ifelse: if . else
   41       | if .

    TOK_ELSE  shift, and go to state 79

    $default  reduce using rule 41 (ifelse)

    else  go to state 80


state 41

   38 statement: return .

    $default  reduce using rule 38 (statement)


state 42

   14 identdecl: basetype . TOK_ARRAY TOK_IDENT
   15          | basetype . TOK_IDENT

    TOK_ARRAY  shift, and go to state 81
    TOK_IDENT  shift, and go to state 82


state 43

   35 statement: expr . ';'
   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    TOK_EQ  shift, and go to state 83
    TOK_NE  shift, and go to state 84
    TOK_LT  shift, and go to state 85
    TOK_LE  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_GE  shift, and go to state 88
    '='     shift, and go to state 89
    '+'     shift, and go to state 90
    '-'     shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94
    '['     shift, and go to state 95
    '.'     shift, and go to state 96
    ';'     shift, and go to state 97


state 44

   34 statement: vardecl .

    $default  reduce using rule 34 (statement)


state 45

   54 expr: allocator .

    $default  reduce using rule 54 (expr)


state 46

   55 expr: call .

    $default  reduce using rule 55 (expr)


state 47

   56 expr: variable .

    $default  reduce using rule 56 (expr)


state 48

   57 expr: constant .

    $default  reduce using rule 57 (expr)


state 49

    5 program: program error '}' .

    $default  reduce using rule 5 (program)


state 50

    6 program: program error ';' .

    $default  reduce using rule 6 (program)


state 51

   42 if: TOK_IF '(' . expr ')' statement

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 98
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 52

   39 while: TOK_WHILE '(' . expr ')' statement

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 99
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 53

   81 call: TOK_IDENT . argslist ')'
   82     | TOK_IDENT . '(' ')'
   84 variable: TOK_IDENT .

    '('  shift, and go to state 62

    $default  reduce using rule 84 (variable)

    argslist  go to state 63


state 54

   45 return: TOK_RETURN ';' .

    $default  reduce using rule 45 (return)


state 55

   44 return: TOK_RETURN expr . ';'
   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    TOK_EQ  shift, and go to state 83
    TOK_NE  shift, and go to state 84
    TOK_LT  shift, and go to state 85
    TOK_LE  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_GE  shift, and go to state 88
    '='     shift, and go to state 89
    '+'     shift, and go to state 90
    '-'     shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94
    '['     shift, and go to state 95
    '.'     shift, and go to state 96
    ';'     shift, and go to state 100


state 56

   18 structdef: TOK_STRUCT TOK_IDENT . fielddeclst '}'
   19          | TOK_STRUCT TOK_IDENT . '{' '}'

    '{'  shift, and go to state 101

    fielddeclst  go to state 102


state 57

   50 basetype: TOK_STRING .
   79 allocator: TOK_NEW TOK_STRING . '(' expr ')'

    '('  shift, and go to state 103

    $default  reduce using rule 50 (basetype)


state 58

   78 allocator: TOK_NEW TOK_IDENT . '(' ')'

    '('  shift, and go to state 104


state 59

   80 allocator: TOK_NEW basetype . '[' expr ']'

    '['  shift, and go to state 105


state 60

   16 identdecl: TOK_IDENT TOK_ARRAY . TOK_IDENT

    TOK_IDENT  shift, and go to state 106


state 61

   17 identdecl: TOK_IDENT TOK_IDENT .

    $default  reduce using rule 17 (identdecl)


state 62

   53 argslist: '(' . expr
   82 call: TOK_IDENT '(' . ')'

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    ')'            shift, and go to state 107
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 108
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 63

   52 argslist: argslist . ',' expr
   81 call: TOK_IDENT argslist . ')'

    ')'  shift, and go to state 109
    ','  shift, and go to state 110


state 64

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   72     | TOK_ORD expr .
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 72 (expr)


state 65

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   73     | TOK_CHR expr .
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 73 (expr)


state 66

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   76     | '(' expr . ')'
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    TOK_EQ  shift, and go to state 83
    TOK_NE  shift, and go to state 84
    TOK_LT  shift, and go to state 85
    TOK_LE  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_GE  shift, and go to state 88
    ')'     shift, and go to state 111
    '='     shift, and go to state 89
    '+'     shift, and go to state 90
    '-'     shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94
    '['     shift, and go to state 95
    '.'     shift, and go to state 96


state 67

   27 block: '{' '}' .

    $default  reduce using rule 27 (block)


state 68

   77 vardecl: identdecl . '=' expr ';'

    '='  shift, and go to state 75


state 69

   32 stmtlist: '{' statement .

    $default  reduce using rule 32 (stmtlist)


state 70

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   71     | '+' expr .
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 71 (expr)


state 71

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   70     | '-' expr .
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 70 (expr)


state 72

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   74     | '!' expr .
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 74 (expr)


state 73

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   75     | '.' expr .
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    $default  reduce using rule 75 (expr)


state 74

    9 function: identdecl '(' . ')' funcblock
   11         | identdecl '(' . ')' ';'
   13 identdeclst: '(' . identdecl

    TOK_VOID    shift, and go to state 5
    TOK_BOOL    shift, and go to state 6
    TOK_CHAR    shift, and go to state 7
    TOK_INT     shift, and go to state 8
    TOK_STRING  shift, and go to state 9
    TOK_IDENT   shift, and go to state 112
    TOK_TYPEID  shift, and go to state 22
    ')'         shift, and go to state 113

    identdecl  go to state 114
    basetype   go to state 42


state 75

   77 vardecl: identdecl '=' . expr ';'

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 115
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 76

    8 function: identdecl identdeclst . ')' funcblock
   10         | identdecl identdeclst . ')' ';'
   12 identdeclst: identdeclst . ',' identdecl

    ')'  shift, and go to state 116
    ','  shift, and go to state 117


state 77

   26 block: stmtlist '}' .

    $default  reduce using rule 26 (block)


state 78

   31 stmtlist: stmtlist statement .

    $default  reduce using rule 31 (stmtlist)


state 79

   43 else: TOK_ELSE . statement

    TOK_VOID       shift, and go to state 5
    TOK_BOOL       shift, and go to state 6
    TOK_CHAR       shift, and go to state 7
    TOK_INT        shift, and go to state 8
    TOK_STRING     shift, and go to state 9
    TOK_IF         shift, and go to state 10
    TOK_WHILE      shift, and go to state 11
    TOK_RETURN     shift, and go to state 12
    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_TYPEID     shift, and go to state 22
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30
    ';'            shift, and go to state 31

    identdecl  go to state 68
    block      go to state 35
    stmtlist   go to state 36
    statement  go to state 118
    while      go to state 38
    ifelse     go to state 39
    if         go to state 40
    return     go to state 41
    basetype   go to state 42
    expr       go to state 43
    vardecl    go to state 44
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 80

   40 ifelse: if else .

    $default  reduce using rule 40 (ifelse)


state 81

   14 identdecl: basetype TOK_ARRAY . TOK_IDENT

    TOK_IDENT  shift, and go to state 119


state 82

   15 identdecl: basetype TOK_IDENT .

    $default  reduce using rule 15 (identdecl)


state 83

   59 expr: expr TOK_EQ . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 120
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 84

   60 expr: expr TOK_NE . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 121
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 85

   61 expr: expr TOK_LT . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 122
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 86

   62 expr: expr TOK_LE . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 123
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 87

   63 expr: expr TOK_GT . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 124
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 88

   64 expr: expr TOK_GE . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 125
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 89

   58 expr: expr '=' . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 126
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 90

   65 expr: expr '+' . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 127
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 91

   66 expr: expr '-' . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 128
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 92

   68 expr: expr '*' . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 129
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 93

   67 expr: expr '/' . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 130
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 94

   69 expr: expr '%' . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 131
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 95

   83 variable: expr '[' . expr ']'

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 132
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 96

   85 variable: expr '.' . TOK_IDENT

    TOK_IDENT  shift, and go to state 133


state 97

   35 statement: expr ';' .

    $default  reduce using rule 35 (statement)


state 98

   42 if: TOK_IF '(' expr . ')' statement
   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    TOK_EQ  shift, and go to state 83
    TOK_NE  shift, and go to state 84
    TOK_LT  shift, and go to state 85
    TOK_LE  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_GE  shift, and go to state 88
    ')'     shift, and go to state 134
    '='     shift, and go to state 89
    '+'     shift, and go to state 90
    '-'     shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94
    '['     shift, and go to state 95
    '.'     shift, and go to state 96


state 99

   39 while: TOK_WHILE '(' expr . ')' statement
   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    TOK_EQ  shift, and go to state 83
    TOK_NE  shift, and go to state 84
    TOK_LT  shift, and go to state 85
    TOK_LE  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_GE  shift, and go to state 88
    ')'     shift, and go to state 135
    '='     shift, and go to state 89
    '+'     shift, and go to state 90
    '-'     shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94
    '['     shift, and go to state 95
    '.'     shift, and go to state 96


state 100

   44 return: TOK_RETURN expr ';' .

    $default  reduce using rule 44 (return)


state 101

   19 structdef: TOK_STRUCT TOK_IDENT '{' . '}'
   21 fielddeclst: '{' . fielddecl

    TOK_VOID    shift, and go to state 5
    TOK_BOOL    shift, and go to state 6
    TOK_CHAR    shift, and go to state 7
    TOK_INT     shift, and go to state 8
    TOK_STRING  shift, and go to state 9
    TOK_IDENT   shift, and go to state 136
    TOK_TYPEID  shift, and go to state 22
    '}'         shift, and go to state 137

    fielddecl  go to state 138
    basetype   go to state 139


state 102

   18 structdef: TOK_STRUCT TOK_IDENT fielddeclst . '}'
   20 fielddeclst: fielddeclst . fielddecl

    TOK_VOID    shift, and go to state 5
    TOK_BOOL    shift, and go to state 6
    TOK_CHAR    shift, and go to state 7
    TOK_INT     shift, and go to state 8
    TOK_STRING  shift, and go to state 9
    TOK_IDENT   shift, and go to state 136
    TOK_TYPEID  shift, and go to state 22
    '}'         shift, and go to state 140

    fielddecl  go to state 141
    basetype   go to state 139


state 103

   79 allocator: TOK_NEW TOK_STRING '(' . expr ')'

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 142
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 104

   78 allocator: TOK_NEW TOK_IDENT '(' . ')'

    ')'  shift, and go to state 143


state 105

   80 allocator: TOK_NEW basetype '[' . expr ']'

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 144
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 106

   16 identdecl: TOK_IDENT TOK_ARRAY TOK_IDENT .

    $default  reduce using rule 16 (identdecl)


state 107

   82 call: TOK_IDENT '(' ')' .

    $default  reduce using rule 82 (call)


state 108

   53 argslist: '(' expr .
   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    TOK_EQ  shift, and go to state 83
    TOK_NE  shift, and go to state 84
    TOK_LT  shift, and go to state 85
    TOK_LE  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_GE  shift, and go to state 88
    '='     shift, and go to state 89
    '+'     shift, and go to state 90
    '-'     shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94
    '['     shift, and go to state 95
    '.'     shift, and go to state 96

    $default  reduce using rule 53 (argslist)


state 109

   81 call: TOK_IDENT argslist ')' .

    $default  reduce using rule 81 (call)


state 110

   52 argslist: argslist ',' . expr

    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 53
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30

    expr       go to state 145
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 111

   76 expr: '(' expr ')' .

    $default  reduce using rule 76 (expr)


state 112

   16 identdecl: TOK_IDENT . TOK_ARRAY TOK_IDENT
   17          | TOK_IDENT . TOK_IDENT

    TOK_ARRAY  shift, and go to state 60
    TOK_IDENT  shift, and go to state 61


state 113

    9 function: identdecl '(' ')' . funcblock
   11         | identdecl '(' ')' . ';'

    '{'  shift, and go to state 146
    ';'  shift, and go to state 147

    funcblock  go to state 148
    stmtlist   go to state 149


state 114

   13 identdeclst: '(' identdecl .

    $default  reduce using rule 13 (identdeclst)


state 115

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   77 vardecl: identdecl '=' expr . ';'
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    TOK_EQ  shift, and go to state 83
    TOK_NE  shift, and go to state 84
    TOK_LT  shift, and go to state 85
    TOK_LE  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_GE  shift, and go to state 88
    '='     shift, and go to state 89
    '+'     shift, and go to state 90
    '-'     shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94
    '['     shift, and go to state 95
    '.'     shift, and go to state 96
    ';'     shift, and go to state 150


state 116

    8 function: identdecl identdeclst ')' . funcblock
   10         | identdecl identdeclst ')' . ';'

    '{'  shift, and go to state 146
    ';'  shift, and go to state 151

    funcblock  go to state 152
    stmtlist   go to state 149


state 117

   12 identdeclst: identdeclst ',' . identdecl

    TOK_VOID    shift, and go to state 5
    TOK_BOOL    shift, and go to state 6
    TOK_CHAR    shift, and go to state 7
    TOK_INT     shift, and go to state 8
    TOK_STRING  shift, and go to state 9
    TOK_IDENT   shift, and go to state 112
    TOK_TYPEID  shift, and go to state 22

    identdecl  go to state 153
    basetype   go to state 42


state 118

   43 else: TOK_ELSE statement .

    $default  reduce using rule 43 (else)


state 119

   14 identdecl: basetype TOK_ARRAY TOK_IDENT .

    $default  reduce using rule 14 (identdecl)


state 120

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   59     | expr TOK_EQ expr .
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_GT  error (nonassociative)
    TOK_GE  error (nonassociative)

    $default  reduce using rule 59 (expr)


state 121

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   60     | expr TOK_NE expr .
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_GT  error (nonassociative)
    TOK_GE  error (nonassociative)

    $default  reduce using rule 60 (expr)


state 122

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   61     | expr TOK_LT expr .
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_GT  error (nonassociative)
    TOK_GE  error (nonassociative)

    $default  reduce using rule 61 (expr)


state 123

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   62     | expr TOK_LE expr .
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_GT  error (nonassociative)
    TOK_GE  error (nonassociative)

    $default  reduce using rule 62 (expr)


state 124

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   63     | expr TOK_GT expr .
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_GT  error (nonassociative)
    TOK_GE  error (nonassociative)

    $default  reduce using rule 63 (expr)


state 125

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   64     | expr TOK_GE expr .
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_GT  error (nonassociative)
    TOK_GE  error (nonassociative)

    $default  reduce using rule 64 (expr)


state 126

   58 expr: expr . '=' expr
   58     | expr '=' expr .
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    TOK_EQ  shift, and go to state 83
    TOK_NE  shift, and go to state 84
    TOK_LT  shift, and go to state 85
    TOK_LE  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_GE  shift, and go to state 88
    '='     shift, and go to state 89
    '+'     shift, and go to state 90
    '-'     shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94
    '['     shift, and go to state 95
    '.'     shift, and go to state 96

    $default  reduce using rule 58 (expr)


state 127

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   65     | expr '+' expr .
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 65 (expr)


state 128

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   66     | expr '-' expr .
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 66 (expr)


state 129

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   68     | expr '*' expr .
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 68 (expr)


state 130

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   67     | expr '/' expr .
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 67 (expr)


state 131

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   69     | expr '%' expr .
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    '['  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 69 (expr)


state 132

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   83         | expr '[' expr . ']'
   85         | expr . '.' TOK_IDENT

    TOK_EQ  shift, and go to state 83
    TOK_NE  shift, and go to state 84
    TOK_LT  shift, and go to state 85
    TOK_LE  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_GE  shift, and go to state 88
    '='     shift, and go to state 89
    '+'     shift, and go to state 90
    '-'     shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94
    '['     shift, and go to state 95
    '.'     shift, and go to state 96
    ']'     shift, and go to state 154


state 133

   85 variable: expr '.' TOK_IDENT .

    $default  reduce using rule 85 (variable)


state 134

   42 if: TOK_IF '(' expr ')' . statement

    TOK_VOID       shift, and go to state 5
    TOK_BOOL       shift, and go to state 6
    TOK_CHAR       shift, and go to state 7
    TOK_INT        shift, and go to state 8
    TOK_STRING     shift, and go to state 9
    TOK_IF         shift, and go to state 10
    TOK_WHILE      shift, and go to state 11
    TOK_RETURN     shift, and go to state 12
    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_TYPEID     shift, and go to state 22
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30
    ';'            shift, and go to state 31

    identdecl  go to state 68
    block      go to state 35
    stmtlist   go to state 36
    statement  go to state 155
    while      go to state 38
    ifelse     go to state 39
    if         go to state 40
    return     go to state 41
    basetype   go to state 42
    expr       go to state 43
    vardecl    go to state 44
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 135

   39 while: TOK_WHILE '(' expr ')' . statement

    TOK_VOID       shift, and go to state 5
    TOK_BOOL       shift, and go to state 6
    TOK_CHAR       shift, and go to state 7
    TOK_INT        shift, and go to state 8
    TOK_STRING     shift, and go to state 9
    TOK_IF         shift, and go to state 10
    TOK_WHILE      shift, and go to state 11
    TOK_RETURN     shift, and go to state 12
    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_TYPEID     shift, and go to state 22
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30
    ';'            shift, and go to state 31

    identdecl  go to state 68
    block      go to state 35
    stmtlist   go to state 36
    statement  go to state 156
    while      go to state 38
    ifelse     go to state 39
    if         go to state 40
    return     go to state 41
    basetype   go to state 42
    expr       go to state 43
    vardecl    go to state 44
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 136

   24 fielddecl: TOK_IDENT . TOK_ARRAY TOK_IDENT ';'
   25          | TOK_IDENT . TOK_IDENT ';'

    TOK_ARRAY  shift, and go to state 157
    TOK_IDENT  shift, and go to state 158


state 137

   19 structdef: TOK_STRUCT TOK_IDENT '{' '}' .

    $default  reduce using rule 19 (structdef)


state 138

   21 fielddeclst: '{' fielddecl .

    $default  reduce using rule 21 (fielddeclst)


state 139

   22 fielddecl: basetype . TOK_ARRAY TOK_IDENT ';'
   23          | basetype . TOK_IDENT ';'

    TOK_ARRAY  shift, and go to state 159
    TOK_IDENT  shift, and go to state 160


state 140

   18 structdef: TOK_STRUCT TOK_IDENT fielddeclst '}' .

    $default  reduce using rule 18 (structdef)


state 141

   20 fielddeclst: fielddeclst fielddecl .

    $default  reduce using rule 20 (fielddeclst)


state 142

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   79 allocator: TOK_NEW TOK_STRING '(' expr . ')'
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    TOK_EQ  shift, and go to state 83
    TOK_NE  shift, and go to state 84
    TOK_LT  shift, and go to state 85
    TOK_LE  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_GE  shift, and go to state 88
    ')'     shift, and go to state 161
    '='     shift, and go to state 89
    '+'     shift, and go to state 90
    '-'     shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94
    '['     shift, and go to state 95
    '.'     shift, and go to state 96


state 143

   78 allocator: TOK_NEW TOK_IDENT '(' ')' .

    $default  reduce using rule 78 (allocator)


state 144

   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   80 allocator: TOK_NEW basetype '[' expr . ']'
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    TOK_EQ  shift, and go to state 83
    TOK_NE  shift, and go to state 84
    TOK_LT  shift, and go to state 85
    TOK_LE  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_GE  shift, and go to state 88
    '='     shift, and go to state 89
    '+'     shift, and go to state 90
    '-'     shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94
    '['     shift, and go to state 95
    '.'     shift, and go to state 96
    ']'     shift, and go to state 162


state 145

   52 argslist: argslist ',' expr .
   58 expr: expr . '=' expr
   59     | expr . TOK_EQ expr
   60     | expr . TOK_NE expr
   61     | expr . TOK_LT expr
   62     | expr . TOK_LE expr
   63     | expr . TOK_GT expr
   64     | expr . TOK_GE expr
   65     | expr . '+' expr
   66     | expr . '-' expr
   67     | expr . '/' expr
   68     | expr . '*' expr
   69     | expr . '%' expr
   83 variable: expr . '[' expr ']'
   85         | expr . '.' TOK_IDENT

    TOK_EQ  shift, and go to state 83
    TOK_NE  shift, and go to state 84
    TOK_LT  shift, and go to state 85
    TOK_LE  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_GE  shift, and go to state 88
    '='     shift, and go to state 89
    '+'     shift, and go to state 90
    '-'     shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94
    '['     shift, and go to state 95
    '.'     shift, and go to state 96

    $default  reduce using rule 52 (argslist)


state 146

   30 funcblock: '{' . '}'
   32 stmtlist: '{' . statement

    TOK_VOID       shift, and go to state 5
    TOK_BOOL       shift, and go to state 6
    TOK_CHAR       shift, and go to state 7
    TOK_INT        shift, and go to state 8
    TOK_STRING     shift, and go to state 9
    TOK_IF         shift, and go to state 10
    TOK_WHILE      shift, and go to state 11
    TOK_RETURN     shift, and go to state 12
    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_TYPEID     shift, and go to state 22
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26
    '}'            shift, and go to state 163
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30
    ';'            shift, and go to state 31

    identdecl  go to state 68
    block      go to state 35
    stmtlist   go to state 36
    statement  go to state 69
    while      go to state 38
    ifelse     go to state 39
    if         go to state 40
    return     go to state 41
    basetype   go to state 42
    expr       go to state 43
    vardecl    go to state 44
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 147

   11 function: identdecl '(' ')' ';' .

    $default  reduce using rule 11 (function)


state 148

    9 function: identdecl '(' ')' funcblock .

    $default  reduce using rule 9 (function)


state 149

   29 funcblock: stmtlist . '}'
   31 stmtlist: stmtlist . statement

    TOK_VOID       shift, and go to state 5
    TOK_BOOL       shift, and go to state 6
    TOK_CHAR       shift, and go to state 7
    TOK_INT        shift, and go to state 8
    TOK_STRING     shift, and go to state 9
    TOK_IF         shift, and go to state 10
    TOK_WHILE      shift, and go to state 11
    TOK_RETURN     shift, and go to state 12
    TOK_FALSE      shift, and go to state 14
    TOK_TRUE       shift, and go to state 15
    TOK_NULL       shift, and go to state 16
    TOK_NEW        shift, and go to state 17
    TOK_IDENT      shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_CHARCON    shift, and go to state 20
    TOK_STRINGCON  shift, and go to state 21
    TOK_TYPEID     shift, and go to state 22
    TOK_ORD        shift, and go to state 23
    TOK_CHR        shift, and go to state 24
    '('            shift, and go to state 25
    '{'            shift, and go to state 26
    '}'            shift, and go to state 164
    '+'            shift, and go to state 27
    '-'            shift, and go to state 28
    '!'            shift, and go to state 29
    '.'            shift, and go to state 30
    ';'            shift, and go to state 31

    identdecl  go to state 68
    block      go to state 35
    stmtlist   go to state 36
    statement  go to state 78
    while      go to state 38
    ifelse     go to state 39
    if         go to state 40
    return     go to state 41
    basetype   go to state 42
    expr       go to state 43
    vardecl    go to state 44
    allocator  go to state 45
    call       go to state 46
    variable   go to state 47
    constant   go to state 48


state 150

   77 vardecl: identdecl '=' expr ';' .

    $default  reduce using rule 77 (vardecl)


state 151

   10 function: identdecl identdeclst ')' ';' .

    $default  reduce using rule 10 (function)


state 152

    8 function: identdecl identdeclst ')' funcblock .

    $default  reduce using rule 8 (function)


state 153

   12 identdeclst: identdeclst ',' identdecl .

    $default  reduce using rule 12 (identdeclst)


state 154

   83 variable: expr '[' expr ']' .

    $default  reduce using rule 83 (variable)


state 155

   42 if: TOK_IF '(' expr ')' statement .

    $default  reduce using rule 42 (if)


state 156

   39 while: TOK_WHILE '(' expr ')' statement .

    $default  reduce using rule 39 (while)


state 157

   24 fielddecl: TOK_IDENT TOK_ARRAY . TOK_IDENT ';'

    TOK_IDENT  shift, and go to state 165


state 158

   25 fielddecl: TOK_IDENT TOK_IDENT . ';'

    ';'  shift, and go to state 166


state 159

   22 fielddecl: basetype TOK_ARRAY . TOK_IDENT ';'

    TOK_IDENT  shift, and go to state 167


state 160

   23 fielddecl: basetype TOK_IDENT . ';'

    ';'  shift, and go to state 168


state 161

   79 allocator: TOK_NEW TOK_STRING '(' expr ')' .

    $default  reduce using rule 79 (allocator)


state 162

   80 allocator: TOK_NEW basetype '[' expr ']' .

    $default  reduce using rule 80 (allocator)


state 163

   30 funcblock: '{' '}' .

    $default  reduce using rule 30 (funcblock)


state 164

   29 funcblock: stmtlist '}' .

    $default  reduce using rule 29 (funcblock)


state 165

   24 fielddecl: TOK_IDENT TOK_ARRAY TOK_IDENT . ';'

    ';'  shift, and go to state 169


state 166

   25 fielddecl: TOK_IDENT TOK_IDENT ';' .

    $default  reduce using rule 25 (fielddecl)


state 167

   22 fielddecl: basetype TOK_ARRAY TOK_IDENT . ';'

    ';'  shift, and go to state 170


state 168

   23 fielddecl: basetype TOK_IDENT ';' .

    $default  reduce using rule 23 (fielddecl)


state 169

   24 fielddecl: TOK_IDENT TOK_ARRAY TOK_IDENT ';' .

    $default  reduce using rule 24 (fielddecl)


state 170

   22 fielddecl: basetype TOK_ARRAY TOK_IDENT ';' .

    $default  reduce using rule 22 (fielddecl)
