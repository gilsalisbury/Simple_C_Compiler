__assert_fail (5:23.5) {0} void prototype 
  expr (5:23.27) {1} string variable param lval 
  file (5:23.40) {1} string variable param lval 
  line (5:23.50) {1} int variable param lval 
putb (5:24.5) {0} void prototype 
  b (5:24.16) {2} bool variable param lval 
putc (5:25.5) {0} void prototype 
  c (5:25.16) {3} char variable param lval 
puti (5:26.5) {0} void prototype 
  i (5:26.15) {4} int variable param lval 
puts (5:27.5) {0} void prototype 
  s (5:27.18) {5} string variable param lval 
endl (5:28.5) {0} void prototype 
getc (5:29.4) {0} int prototype 
getw (5:30.7) {0} string prototype 
getln (5:31.7) {0} string prototype 
getargv (5:32.9) {0} string array vaddr prototype 
exit (5:33.5) {0} void prototype 
  status (5:33.15) {11} int variable param lval 
stack (6:7.7) {0} struct "stack" 
  string (6:8.3) {0} string 
  size (6:9.7)  int field {stack} 
  top (6:10.7)  int field {stack} 

new_stack (6:13.6) {0} struct "stack" function 
  size (6:13.21) {12} int variable param lval 
  stack (6:14.9) {12} struct "stack" variable lval 
push (6:21.5) {0} void function 
  stack (6:21.17) {13} struct "stack" variable param lval 
  str (6:21.31) {13} string variable param lval 
pop (6:27.7) {0} string function 
  stack (6:27.18) {15} struct "stack" variable param lval 
  tmp (6:29.10) {15} string variable lval 
empty (6:34.5) {0} bool function 
  stack (6:34.18) {17} struct "stack" variable param lval 

argv (6:39.9) {0} string array variable lval 

stack (6:40.6) {0} struct "stack" variable lval 

argi (6:42.4) {0} int variable lval 
